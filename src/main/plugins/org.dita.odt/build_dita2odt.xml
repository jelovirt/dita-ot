<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the DITA Open Toolkit project.
     See the accompanying license.txt file for  applicable licenses.-->
<!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. -->
<project name="dita2odt">
	
  <target name="set_odt_output_tempdir">
    <condition property="odt.output.tempdir" value="${dita.map.output.dir}/${uplevels}temp">
      <not>
        <isset property="odt.output.tempdir"/>
      </not>
    </condition>
    <copy todir="${odt.output.tempdir}">
      <fileset dir="${dita.map.output.dir}/${uplevels}">
        <exclude name="**/*.list"/>
        <exclude name="**/*.log"/>
        <exclude name="**/*.temp"/>
        <exclude name="**/*.properties"/>
        <exclude name="**/*.odt"/>
        <exclude name="temp/**"/>
      </fileset>
    </copy>
  </target>

  <target name="clean_output_tempdir" unless="$flag">
    <!--delete failonerror="yes" includeemptydirs="true" dir="${odt.output.tempdir}" /-->
  </target>

  <target name="dita2odt"
          depends="dita2odt.init,
                   build-init,
                   preprocess,
                   odt.image-metadata,
                   set_odt_output_tempdir,
                   dita.odt.package.topic,
                   move-output-file,
                   clean_output_tempdir"/>

  <target name="dita2odt.init">
    <property name="odt.suffix" value=".odt" />
    <condition property="args.rellinks" value="none">
      <not><isset property="args.rellinks"/></not>
    </condition>
  </target>
  
  <target name="odt.image-metadata" description="Read image metadata">
    <pipeline message="Read image metadata." taskname="image-metadata" tempdir="${dita.temp.dir}">
      <module class="org.dita.dost.module.ImageMetadataModule">
        <param name="outputdir" location="${output.dir}"/>
      </module>
    </pipeline>
  </target>

  <target name="map2odt" unless="noMap">
    <antcall target="dita.map.odt">
      <param name="input"
        value="${dita.temp.dir}/${user.input.file}" />
      <param name="output"
        value="${odt.output.tempdir}/content.xml" />
    </antcall>
  </target>
  	
  <target name="topic2odt" if="noMap">
    <antcall target="dita.topic.odt">
      <param name="input"
        value="${dita.temp.dir}/${user.input.file}" />
      <param name="output"
        value="${odt.output.tempdir}/content.xml" />
    </antcall>
  </target>

  <!-- Build odt content.xml from DITA -->
  <target name="dita.map.odt" description="Build odt content.xml file">
    <condition property="args.xsl"
      value="${dita.plugin.org.dita.odt.dir}/xsl/dita2odt.xsl">
      <not>
        <isset property="args.xsl" />
      </not>
    </condition>
    <dirname file="${output}" property="dita.odt.outputdir" />
  	<!--create topic merge file -->  	
  	<dirname property="dita.temp.dir.fullpath" file="${dita.temp.dir}/dummy.file"/>
    <pipeline message="topicmerge" taskname="topic-merge"
              inputmap="${dita.temp.dir.fullpath}/${user.input.file}"
              tempdir="${dita.temp.dir.fullpath}">
  	  <module class="org.dita.dost.module.TopicMergeModule">
        <param name="output" location="${dita.temp.dir.fullpath}/${dita.map.filename.root}_MERGED.xml"/>
  	    <param name="style" location="${dita.plugin.org.dita.odt.dir}/xsl/xslodt/common/topicmerge.xsl"/>
  	  </module>
  	</pipeline>
  	<!--create content.xml -->
  	<!--Change path of ${dita.input.valfile} into url-->
  	<makeurl file="${dita.input.valfile}" property="dita.input.valfile.url" validate="no"/>
    <xslt basedir="${dita.temp.dir}"
          in="${dita.temp.dir}/${dita.map.filename.root}_MERGED.xml"
          classpathref="dost.class.path"
          out="${output}" style="${args.xsl}"
          filenameparameter="FILENAME"
          filedirparameter="FILEDIR">
      <param name="BASEDIR" expression="${basedir}"/>
      <param name="TEMPDIR" expression="${dita.temp.dir}"/>
      <param name="DRAFT" expression="${args.draft}" if="args.draft" />
      <param name="FILTERFILE" expression="${dita.input.valfile.url}" if="dita.input.valfile" />
      <param name="OUTPUTDIR" expression="${dita.odt.outputdir}" />
      <param name="include.rellinks" expression="${include.rellinks}"/>
      <param name="INDEXSHOW" expression="${args.indexshow}" if="args.indexshow"/>
      <param name="DBG" expression="${args.debug}" if="args.debug"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>

  <target name="dita.topic.odt" description="Build odt content.xml file">
    <condition property="args.xsl" value="${dita.plugin.org.dita.odt.dir}/xsl/dita2odt.xsl">
      <not>
        <isset property="args.xsl" />
      </not>
    </condition>
    <dirname file="${output}" property="dita.odt.outputdir" />
  	<!--Change path of ${dita.input.valfile} into url-->
  	<makeurl file="${dita.input.valfile}" property="dita.input.valfile.url" validate="no"/>
    <xslt in="${input}" out="${output}" basedir="${dita.temp.dir}"
          classpathref="dost.class.path"
          style="${args.xsl}"
          filenameparameter="FILENAME"
          filedirparameter="FILEDIR">
      <param name="BASEDIR" expression="${basedir}"/>
      <param name="TEMPDIR" expression="${dita.temp.dir}"/>
      <param name="DRAFT" expression="${args.draft}" if="args.draft" />
      <param name="FILTERFILE" expression="${dita.input.valfile.url}" if="dita.input.valfile" />
      <param name="OUTPUTDIR" expression="${dita.odt.outputdir}" />
      <param name="include.rellinks" expression="${include.rellinks}"/>
      <param name="INDEXSHOW" expression="${args.indexshow}" if="args.indexshow"/>
      <param name="DBG" expression="${args.debug}" if="args.debug"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
      	
  <target name="dita.topic.odt.stylesfile" description="Build odt styles.xml file">
    <local name="input.file"/>
    <condition property="input.file"
               value="${dita.temp.dir}/${user.input.file}"
               else="${dita.temp.dir}/${dita.map.filename.root}_MERGED.xml">
      <isset property="noMap"/>
    </condition>
    <xslt in="${input.file}"
          out="${odt.output.tempdir}/styles.xml"
          classpathref="dost.class.path"
          style="${dita.plugin.org.dita.odt.dir}/xsl/xslodt/dita2odtstyles.xsl">
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
	
	<!-- Deprecated since 2.1 -->
  <target name="dita.map.odt.stylesfile" description="Build odt styles.xml file" unless="noMap">
    <xslt in="${dita.temp.dir}/${dita.map.filename.root}_MERGED.xml"
          out="${odt.output.tempdir}/styles.xml"
          classpathref="dost.class.path"
          style="${dita.plugin.org.dita.odt.dir}/xsl/xslodt/dita2odtstyles.xsl">
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
	
  <target name="dita.out.odt.manifest.file" description="Build odt manifest.xml file">
    <makeurl property="job.uri" file="${dita.temp.dir}/.job.xml"/>
    <xslt in="${dita.temp.dir}/${user.input.file}"
          out="${odt.output.tempdir}/META-INF/manifest.xml"
          classpathref="dost.class.path"
          style="${dita.plugin.org.dita.odt.dir}/xsl/xslodt/dita2odtmanifest.xsl">
      <param name="job-url" expression="${job.uri}"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>  
    
  <target name="dita.out.odt.manifest-rdf.file" description="Build odt manifest.rdf file">
    <xslt in="${dita.temp.dir}/${user.input.file}"
          out="${odt.output.tempdir}/manifest.rdf"
          classpathref="dost.class.path"
          style="${dita.plugin.org.dita.odt.dir}/xsl/xslodt/dita2odtmanifest-rdf.xsl">
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
    <echo file="${odt.output.tempdir}/mimetype">application/vnd.oasis.opendocument.text</echo>
   </target>

   <target name="dita.odt.package.topic" depends="topic2odt, map2odt, dita.topic.odt.stylesfile, dita.out.odt.manifest.file, dita.out.odt.manifest-rdf.file"
           description="Package into odt file">
     <condition property="outputFile"
                value="${odt.output.tempdir}/${dita.topic.filename.root}${odt.suffix}"
                else="${odt.output.tempdir}/${dita.map.filename.root}${odt.suffix}">
       <isset property="noMap"/>
     </condition>
     <zip destfile="${outputFile}"
          basedir="${odt.output.tempdir}"
	   		  excludes="**/*.list, **/*.log, **/*.temp, **/*.properties, **/*.odt">
	   	</zip>
   </target>
   <!-- Deprecated since 2.1 -->
   <target name="dita.odt.package.map" unless="noMap" depends="map2odt, dita.map.odt.stylesfile, dita.out.odt.manifest.file, dita.out.odt.manifest-rdf.file"
          description="Package into odt file">
     <zip destfile="${odt.output.tempdir}/${dita.map.filename.root}${odt.suffix}"
          basedir="${odt.output.tempdir}"
          excludes="**/*.list, **/*.log, **/*.temp, **/*.properties, **/*.odt"/>
   </target>

  <target name="move-output-file">
    <move todir="${dita.map.output.dir}/${uplevels}">
      <fileset dir="${odt.output.tempdir}">
        <include name="**/*.list"/>
        <include name="**/*.log"/>
        <include name="**/*.temp"/>
        <include name="**/*.properties"/>
        <include name="**/*.odt"/>
      </fileset>
    </move>
    <available property="flag" file="${odt.output.tempdir}" type="dir"/>
  </target>

</project>
