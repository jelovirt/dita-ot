<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file in the
     main toolkit package for applicable licenses.-->
<!-- (C) Copyright IBM Corporation 2006 All Rights Reserved. -->
<reference id="xsldirectoryinformation" xml:lang="en-us">
<title>XSL directory information</title>
<shortdesc>The files in the XSL directory are primarily used for generating
output from DITA topics that use the Music specialization. The directory
should contain any XSLT and associated files used for overriding existing
transforms, or used for new transforms. There is no requirement on
file organization within the xsl/ directory.</shortdesc>
<refbody>
<section><p>The following files are included in this directory:</p><ul>
<li>music2xhtml.xsl: This is an override for XHTML output. It imports
processing code for the two music related specializations (next two
items).</li>
<li>songlist2xhtml.xsl: Generates XHTML column headers for the newer
version of the specialization. This makes use of hooks in the code
that simply the process for adding default headers to tables. The
override checks for the presence of each column, and then generates
a header; for example, if there are any &lt;rating> elements, a header
will be generated for that column, otherwise the column is skipped.
The override also adds empty cells to make room for skipped elements
(such as when some rows include &lt;rating> and others do not).</li>
<li>cdlist2xhtml.xsl: Generates XHTML headers for the older version
of the specialization, including a heading before each table of CDs.
Most content falls back to default DITA processing; the only reason
for the length of this override is the complexity of the original
(older) table code that must be overridden.</li>
<li>songlist2xslfo.xsl: Generates PDF column headers for the newer
version of the specialization. The logic mimics that in the songlist2xhtml.xsl
file.</li>
<li>musicstrings.xml: This file informs output transforms what languages
are available for generated text, and where to find each language.</li>
<li>music-en-us.xml: English translations of generated text.</li>
<li>music-ru-ru.xml: Russian translations of generated text.</li>
<li>music-sv-se.xml: Swedish translations of generated text.</li>
</ul></section>
<section><title>XSL Files for new plugins</title><p>If a new specialization
does not change any output behavior, then there is no need for an
XSL directory or for XSLT overrides.</p><p>When changes in output
behavior are warranted, then each generated format will likely need
an individual override. This plugin includes one each for XHTML and
PDF, which add headers and adjust rendering of the specialized table.</p><p>If
a file creates generated text, then several additional files are required: <ul>
<li>A strings file similar to the musicstrings.xml file in this directory.
This file is used to determine which languages are available, and
to determine which file contains each language.</li>
<li>Each language should be stored in an XML file. For example, this
plugin includes files for US English, Russian, and Swedish. By convention,
these files all use the same name, apart from a code such as "en-us"
to identify the language.</li>
</ul></p></section>
</refbody>
</reference>
