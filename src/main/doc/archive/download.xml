<?xml version='1.0' encoding='UTF-8'?>
<!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.-->
<!-- (C) Copyright IBM Corporation 2006. All Rights Reserved.
 *--><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "..\..\..\dtd\topic.dtd" []>
<topic id="download">
  <title>Download</title>
  <body>
    <note importance="recommended">Before you click the download link, please read <cite>Important Changes for DITA-OT 1.2</cite> at below to get the information about the installation and usage changes for DITA-OT.</note>
    <p><xref href="http://sourceforge.net/project/showfiles.php?group_id=132728" scope="external" format="html">Download DITA-OT</xref></p>      
    <section>
      <title>Important Changes for DITA-OT 1.2.2</title>
      <p>There are some changes to the behavior of paths in release 1.3 base
        on the SourceForge Patch #1326450 "Make ${basedir} mine".</p>
      <p>Now, basedir can be specified to other places base on needs, 
        and input, output, and temp paths are based on the basedir if 
        they are relative.</p>
      <p>In the sample ant scripts provided in the toolkit's 'ant' directory,
        the default value of 'basedir' was changed to the current directory, 
        which used to point to the toolkit's root direcoty. Base on the design,
        'temp', 'out' directories are now generated into the current directory 
        by default.</p>
      <p>For detail information on this design change, please refer to 
        <xref href="http://dita.xml.org/node/1281" scope="external" format="html"/>.</p>
    </section>
    <section importance="high">
      <title>Important Changes for DITA-OT 1.2</title>
      <p>DITA-OT 1.2 provides two significant new features: an error handling and logging system and a plug-in capability for new transforms and specializations.</p>
      <p>To learn about other changes in this release, refer to the release notes for the package. The known imitations for this release are documented at <xref href="../../doc/DITA-limitations.xml">Known Limitations</xref>.</p>
    </section>
    <section importance="high">
      <title>Error handling and logging system</title>
      <p>Many users have mentioned the difficulty of finding the significant messages among the many informative messages that are generated by the DITA processing pipeline. The error handling and logging system allows you to collect and filter the messages at the end of the processing run, rather than having to watch a steady stream of messages go by on the screen.</p>
      <p>Because the new error handling and logging system is mandatory for the Java command line, you must add <codeph>lib/dost.jar</codeph> to the <varname>CLASSPATH</varname> <xref href="../../doc/installguide/settingenvironmentvariables.xml">Environment Variable</xref>. </p>
      <p>If you invoke your transformation by using an ant script, you must also add a new parameter in your Ant invocation to turn on the error handling and logging. For example, instead of using just <userinput>ant -f ant\sample_xhtml.xml</userinput> to start a transformation, use <userinput>ant <parmname>-f ant\sample_xhtml.xml</parmname> </userinput><i>
          <codeph>-logger org.dita.dost.log.DITAOTBuildLogger</codeph>
        </i>, which will additionally turn on the error handler and logger.</p>
    </section>
    <section>
      <title>DITA-OT 1.2 Plug-ins</title>
      <p>Starting with DITA-OT 1.2, a plug-in capability has been introduced which allows new specializations or output transforms to be added into the toolkit independently of the core development schedule. Several different offerings have been provided as introductory plug-in capabilities of DITA-OT. You can select and download the plug-in you need by going to the DITA-OT download page and looking for the new <q>Plug-ins</q> category. Then read further on <xref href="plugin/useplugin.xml">how to install and use the plugin</xref>. Any dependencies for plug-ins will be documented in the release notes for each plug-in.</p>
      <p>At the time of DITA-OT 1.2 release, the following plug-ins are available for download:</p>
      <dl>
        <dlhead>
          <dthd>Plug-in</dthd>
          <ddhd>Purpose</ddhd>
        </dlhead>
        <dlentry>
          <dt>API Reference Specialization</dt>
          <dd>The API Reference specialization provides a general-purpose basis for documenting callable programming libraries. The design of API Reference is based loosely on the principle objects from the <xref href="http://download.eclipse.org/tools/emf/2.2.0/javadoc/org/eclipse/emf/ecore/package-summary.html" format="html">eCore metamodel</xref> of the <xref href="http://www.eclipse.org/emf/" format="html">Eclipse Modeling Framework (EMF)</xref>. The API Reference can used to create basic API documentation or can be specialized for a programming language or library type to make it easier to write complete and accurate documentation for such libraries. The Java API Reference provides an example of how to extend the API Reference specialization for the libraries of a specific programming language. </dd>
        </dlentry>
        <dlentry>
          <dt>Java API Reference Specialization</dt>
          <dd>The Java API Reference specialization provides a basis for documenting Java class libraries. The specialization can be used or examined as an example of how to extend the base API Reference specialization.</dd>
        </dlentry>
        <dlentry>
          <dt>Taxonomy Specialization</dt>
          <dd>The Taxonomy (thesaurus) specialization defines formal subjects and the relationships between those subjects so you can classify what your content is about. For a more detailed explanation, see the article at <xref href="http://www-128.ibm.com/developerworks/xml/library/x-dita10/" format="html">http://www-128.ibm.com/developerworks/xml/library/x-dita10/</xref>.</dd>
        </dlentry>
      </dl>
      <dl>
        <dlentry>
          <dt>Idiom&apos;s FO transformation</dt>
          <dd>Idiom Technologies has donated its production quality PDF output for use with the DITA Open Toolkit. This has been integrated into the Toolkit as a plugin. Features of this code include: <ul>
              <li>Index (with extensions) and table of contents generation</li>
              <li>Font mapping: characters can be remapped to different fonts. This is particularly useful for CJK font support, and is configured per-locale.</li>
              <li>Extensive customization of publishing output by setting variables (67 of them) and attribute-sets (391 of them).</li>
              <li>A catalog-based customization framework where you can customize variables, attribute-sets and XSLs without modifying Open Toolkit code: your custom settings live in files in a separate customization hierarchy.</li>
              <li>Bookmap/bookinfo support (DITA 1.0 level).</li>
            </ul></dd>
        </dlentry>
      </dl>
    </section>
  </body>
</topic>
