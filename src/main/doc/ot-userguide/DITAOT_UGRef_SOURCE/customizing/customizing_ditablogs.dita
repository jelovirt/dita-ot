<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="customizing_ditablogs">
	<title>DITAblogs (customizing)</title>
	<prolog>
		<author type="creator">Anna van Raaphorst</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-05-01"/>
			<revised modified="2007-04-10"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>customizing published output</keyword>
				<indexterm>customizing your published output<indexterm>DITAblogs for</indexterm>
				</indexterm>
				<indexterm>DITAblogs<indexterm>customizing your published output</indexterm>
				</indexterm>
				<indexterm>CSS (cascading stylesheet)
				<indexterm>overriding the default with your own</indexterm>
				</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<section>
			<title>Our experience with default CSS behavior</title>
			<p>In the Ant scripts used to build the <cite>DITA Open Toolkit User Guide</cite>, we initially used only the default CSS stylesheet. However, the default CSS for XHTML does not have a <filepath>filepath</filepath> class defined, so all &lt;filepath&gt; elements are unstyled. For this reason we have added a custom CSS file that styles .filepath using the Courier font family. Here is what the CSS file looks like:</p>
			<codeblock>
/* Stylesheet overrides for DITA Open Toolkit User Guide */

/* DITAOT_UGRef_CSS.css */

.filepath { font-family: courier }

			</codeblock>
			<p><note>We recently commented out this change, because we didn't like the way it looks in the XHTML output. However, this example is still a good illustration of how to make this kind of customization.</note></p>
		</section>
		<section>
			<title>Garage sample files that illustrate filtering</title>
			<p>One of the Ant scripts for the garage sample uses filtering to exclude topics having to do with oil and snow.
			The garage batch file that kicks off the processing (<filepath>runbuild.bat</filepath>) and the garage Ant script (<filepath>garage_hierarchy_all.xml</filepath>) are set up to do the filtering.</p>
			<p>To run the build:
			<codeblock>
			runbuild dita2filtered
			</codeblock>
			</p>
			<p>Here is the section of the Ant script that references the <filepath>.ditaval</filepath> file:
		<codeblock>
&lt;!-- Specify the ditaval file to be used for filtering --&gt;
&lt;!-- --&gt;
&lt;!-- To turn on filtering, you first need to change the following ditaval file to include the filter.
See the ditaval file for instructions.
Then run the Ant script with the dita2filtered target name. 
Example (using the batch to call the Ant script): runbuild dita2filtered hierarchy --&gt;
&lt;!-- --&gt;
&lt;property name="dita.input.valfile" value="${projdir}/ditaval_files/garage_filtering.ditaval"/&gt;
		</codeblock>
			</p>
			<p>Here is the map file that uses the &lt;otherprops&gt; element to identify topics having to do with oil and snow:
		<codeblock>
&lt;map title="Garage (hierarchy)"&gt;
&lt;topicref href="concepts/garagetasks.dita" format="dita"&gt;
<b>&lt;topicref href="tasks/changingtheoil.dita" otherprops="oil" format="dita"/&gt;</b>
&lt;topicref href="tasks/organizing.dita" format="dita"/&gt;
<b>&lt;topicref href="tasks/shovellingsnow.dita" otherprops="snow" format="dita"/&gt;</b>
&lt;topicref href="tasks/takinggarbage.dita" format="dita"/&gt;
&lt;topicref href="tasks/spraypainting.dita" format="dita"/&gt;
&lt;topicref href="tasks/washingthecar.dita" format="dita"/&gt;
&lt;/topicref&gt;
&lt;topicref href="concepts/garageconcepts.dita" format="dita"&gt;
&lt;topicref href="concepts/lawnmower.dita" format="dita"/&gt;
<b>&lt;topicref href="concepts/oil.dita" otherprops="oil" format="dita"/&gt;</b>
&lt;topicref href="concepts/paint.dita" format="dita"/&gt;
&lt;topicref href="concepts/shelving.dita" format="dita"/&gt;
<b>&lt;topicref href="concepts/snowshovel.dita" otherprops="snow" format="dita"/&gt;</b>
&lt;topicref href="concepts/toolbox.dita" format="dita"/&gt;
&lt;topicref href="concepts/tools.dita" format="dita"/&gt;
&lt;topicref href="concepts/waterhose.dita" format="dita"/&gt;
&lt;topicref href="concepts/wheelbarrow.dita" format="dita"/&gt;
&lt;topicref href="concepts/workbench.dita" format="dita"/&gt;
&lt;topicref href="concepts/wwfluid.dita" format="dita"/&gt;
&lt;/topicref&gt;
&lt;/map&gt;
		</codeblock>
			</p>
			<p>Here is the <filepath>.ditaval</filepath> file, which is referenced in the Ant script, that excludes topics tagged as having to do with oil or snow:
		<codeblock>
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!-- Filters out topics about "oil" and "snow" from the garage sample. --&gt;
&lt;val&gt;
&lt;prop att="otherprops" val="oil" action="exclude"&gt;&lt;/prop&gt;
&lt;prop att="otherprops" val="snow" action="exclude"&gt;&lt;/prop&gt;
&lt;/val&gt;
		</codeblock>
			</p>
		</section>
	</conbody>
</concept>
