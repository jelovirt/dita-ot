<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2005, 2006 All Rights Reserved. -->
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<task id="showrev" xml:lang="en-us">
	<title>Showing revisions</title>
	<prolog>
		<author type="creator">IBM</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2001, 2005"/>
			<copyrholder>IBM Corporation</copyrholder>
		</copyright>
		<critdates>
			<created date="2001"/>
			<revised modified="2005"/>
			<revised modified="2007-04-10"/>
		</critdates>
		<metadata>
			<keywords>
				<indexterm>metadata attributes<indexterm>showing 
                    revisions</indexterm>
				</indexterm>
				<indexterm>revisions<indexterm>showing</indexterm>
				</indexterm>
				<indexterm>showing revisions</indexterm>
			</keywords>
		</metadata>
	</prolog>
	<taskbody>
		<steps>
			<step>
				<cmd>Create a DITA filter file in the directory to which you want to add 
                    the file. Give the file a descriptive name, such as 
                    "audience-flag-build.ditaval".</cmd>
			</step>
			<step>
				<cmd>Open the file, and type this content into it:</cmd>
				<tutorialinfo>
					<codeblock>&lt;?xml version="1.0" encoding="UTF-8"?> 
&lt;val> &lt;/val></codeblock>
				</tutorialinfo>
			</step>
			<step>
				<cmd>Define the revision you want to show:</cmd>
				<substeps>
					<substep>
						<cmd>Add a new property for flag by adding a new line 
                            <codeph>&lt;revprop val="" style="" action="" date=""/>"</codeph>.
                        </cmd>
					</substep>
					<substep>
						<cmd>Type the name of the revision you want to show.</cmd>
						<stepxmp>For example, "rev1".</stepxmp>
					</substep>
					<substep>
						<cmd>Enter the date of the revision, or the date it 
                            started or ended.</cmd>
						<stepxmp>For example, "05-10-11".</stepxmp>
					</substep>
					<substep>
						<cmd>Define how the revision will be flagged in XHTML: 
                            either by images or colors. </cmd>
						<info>
							<ul>
								<li>Type the value of style if the revision 
                                    will be flagged with color, either by using 
                                    the RGB codes or color. For example, 
                                    "#008040" or "Green". Type the 
                                    value of action. For example, "noflag". </li>
								<li>Enter the value of action if the revision 
                                    will be flagged with image. For example, 
                                    "flag".</li>
							</ul>
						</info>
						<info>
							<p>Use images instead of color to ensure that your 
                            output is flagged consistently and accessibly. 
                            Color works only for flagging phrase-level 
                            information, and cannot be distinguishable to 
                            color-blind readers, on monochrome displays, or 
                            once an online page is printed.</p>
							<p>If both style 
                            and action="flag" are used, the revision will be flagged
                            by both of them.</p>
						</info>
					</substep>
					<substep>
						<cmd>Enter the character to use when flagging the 
                            revision in PDF.</cmd>
						<stepxmp>For example, "A".</stepxmp>
						<info>
							<p>
								<note importance="recommended">Revision indication for PDF output will be specific to 
                            each implementation.  See the documentation for your preferred 
                            FO/PDF output transform as to whether conditional markup and 
                            revisions are supported and how.</note>
							</p>
						</info>
					</substep>
				</substeps>
				<info>You need to define a separate property for each revision 
                    you want to show. For example, if you want to show two 
                    revisions, you would need to define each separately.</info>
				<info>You can define more properties by following the steps 
                    above. The final <filepath>.ditaval</filepath> file with the example values should look like the following:
                    <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?> 
&lt;val>
  &lt;revprop val="rev1" style="Green" action="noflag" date="2006-10-08" />  
  &lt;revprop val="rev2" action="flag" date="2007-10-16" />
&lt;/val></codeblock>
				</info>
			</step>
			<step>
				<cmd>When you publish output from the topic or map, specify the 
                    filter file you want by using the parameter 
                    <codeph>/filter:{args.input.valfile}</codeph> for the output options.</cmd>
			</step>
		</steps>
	</taskbody>
</task>
