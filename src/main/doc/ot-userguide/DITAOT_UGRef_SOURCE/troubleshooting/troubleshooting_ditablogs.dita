<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="troubleshooting_ditablogs">
	<title>DITAblogs (troubleshooting)</title>
	<prolog>
		<author type="creator">Richard Johnson</author>
		<author type="contributor">Anna van Raaphorst</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-05-01"/>
			<revised modified="2007-04-17"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>troubleshooting the build process</keyword>
				<keyword>debugging tool</keyword>
				<keyword>reporting tool</keyword>
				<keyword>ditamsg_generator.xml automatic file generation tool</keyword>
				<keyword>ditadebug.php debugging tool</keyword>
				<indexterm>troubleshooting the build process<indexterm>tools and techniques for</indexterm>
				</indexterm>
				<indexterm>tools and techniques for troubleshooting the build process</indexterm>
				<indexterm>debugging tools</indexterm>
				<indexterm>file generation tools</indexterm>
				<indexterm>automatic file generation tools</indexterm>
				<indexterm>message topic generator (ditamsg_generator.xsl)</indexterm>
				<indexterm>ditamsg_generator.xsl message topic generator</indexterm>
				<indexterm>cross-reference debugging tool (ditadebug.php)</indexterm>
				<indexterm>ditadebug.php cross-reference debugging tool</indexterm>
				<indexterm>PHP tool set for debugging, reporting, and file generation</indexterm>
				<indexterm>XSL stylesheet for automatic message topic generation</indexterm>
				<indexterm>DITAblogs
				<indexterm>troubleshooting</indexterm>
				</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<p otherprops="pdf">Sections in this topic:
		<sl>
				<sli>
					<xref href="#troubleshooting_ditablogs/ditadebug"/>
				</sli>
				<sli>
					<xref href="#troubleshooting_ditablogs/ditamsg_generator"/>
				</sli>
			</sl>
		</p>
		<section id="ditadebug">
			<title>Cross-reference debugging tool (ditadebug.php)
			</title>
			<p>Once we had large numbers of source files and directories to deal with, we ran into the following kinds of error situations that were difficult to resolve:</p>
			<ul>
				<li>We had problems finding out the root cause of error messages in the Ant build log.</li>
				<li>We lost track of which source files had references to other source files.</li>
				<li>We often didn't know which URLs were linked to in the source files.</li>
				<li>We wondered which source files were not actually being used.</li>
			</ul>
			<p>Here is an example of an error message generated by the Toolkit that is caused by a bad href. Notice that the message tells you which file is referenced, but not the location of the original reference.</p>
			<codeblock>
[pipeline] [DOTJ013E][ERROR] Failed to parse the referenced 
file 'installing\nstalling_fo.dita' due to below exception. 
Please correct the reference base on the exception message.
[pipeline] java.io.FileNotFoundException: 
C:\DITAOT_UGRef_SOURCE\installing\nstalling_fo.dita 
(The system cannot find the file specified)
		</codeblock>
			<p>Partly as a learning exercise, and partly to allow us to address these issues, we wrote a build tool that starts from a DITA map file and builds a set of cross-reference and error reports for the files used by the DITA map. This can be done because all the files that make up a DITA source tree have to be well-formed and valid XML files. Standard XML parsing libraries can be used to "walk" the set of source files included by the DITA map.</p>
			<p>Our PHP script (<filepath>ditadebug.php</filepath>) uses the SimpleXML PHP library routines. We added an Ant target to our build script that allows us to run this tool every time we build the book. For the same error shown above, our tool produces the following error message:</p>
			<codeblock>
Error, file C:\DITAOTUG_SOURCE\processing\../installing/nstalling_fo.dita does not exist!
Bad reference: C:\DITAOTUG_SOURCE\processing\processing_pdf2.dita =>
../installing/nstalling_fo.dita
		</codeblock>
			<p>Now we know which file is missing and where the bad reference is! The PHP script is available as part of the DITA Open Toolkit documentation package.</p>
			<p>Here is a subset of a ditadebug-generated report for this document that illustrates the types of information it generates.</p>
			<codeblock>
Starting from ditamap DITAOTUG.ditamap
dir: .\ file: DITAOTUG.ditamap

6 unused files in directories used by this map: 

C:\DITAOTUG_SOURCE\images\dita_finch_logo.jpg , *No DOCTYPE*
...
C:\DITAOTUG_SOURCE\ugxref.txt , *No DOCTYPE*

27 directories in this map: 

C:\DITAOTUG_SOURCE
C:\DITAOTUG_SOURCE\accessing
...
C:\DITAOTUG_SOURCE\troubleshooting

349 files and links in this map: 

C:\DITAOTUG_SOURCE\DITAOTUG_bkinfo.dita , bkinfo
C:\DITAOTUG_SOURCE\DITAOTUG.ditamap , bookmap
...
https://sourceforge.net/projects/dita-ot , *https*

493 references in this map: 

DITAOTUG.ditamap , bkinfo , 
C:\DITAOTUG_SOURCE\DITAOTUG_bkinfo.dita
DITAOTUG.ditamap , chapter , 
C:\DITAOTUG_SOURCE\release_current\relcurrent_map.ditamap
...
C:\DITAOTUG_SOURCE\introduction\aboutdita.dita , conref , 
C:\DITAOTUG_SOURCE\core_vocabulary\darwininfo_typingarch.dita
#darwininfo_typingarch/darwininfo_typingarch_term
C:\DITAOTUG_SOURCE\core_vocabulary\ditaot.dita#ditaot/ditaot_term
...
C:\DITAOTUG_SOURCE\core_vocabulary\xalan.dita , xref , 
C:\DITAOTUG_SOURCE\release_current\sysreqs.dita
C:\DITAOTUG_SOURCE\core_vocabulary\xalan.dita , xref , 
http://archive.apache.org/dist/xml/xalan-j/
		</codeblock>
		</section>
		<section id="ditamsg_generator">
			<title>Message topic generation tool (ditamsg_generator.xsl)</title>
			<p>Below is a listing for the XSLT stylesheet used to read the DITA Open Toolkit message repository <filepath>resource/messages.xml</filepath> file and convert it to a DITA reference topic (see <xref href="messages_toolkit.dita" scope="local">Messages generated by the Toolkit</xref>). This reference topic has been generated multiple times during the production cycle of the <cite>DITA Open Toolkit User Guide</cite>, as the Toolkit moved to new point releases.
</p>
			<codeblock>
&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;!-- Edited with XML Spy v4.2 --&gt;
&lt;xsl:stylesheet version="1.0"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
&lt;xsl:output method="xml" encoding="ISO-8859-1" indent="yes"
doctype-public="-//OASIS//DTD DITA Reference//EN" 
doctype-system="http://docs.oasis-open.org/dita/v1.0.1/dtd/reference.dtd"/&gt;

&lt;!-- Stylesheet to convert messages.xml to a DITA reference topic messages.dita --&gt;
&lt;!-- Author: Dick Johnson 05/27/2006 --&gt;

&lt;xsl:template match="//messages"&gt;


&lt;reference id="messages"&gt;
&lt;title&gt;DITA Open Toolkit Messages&lt;/title&gt;
&lt;refbody&gt;

&lt;!-- put all the Ant messages in a simple table --&gt;
&lt;section id="ant"&gt;
&lt;title&gt;Ant messages&lt;/title&gt;
&lt;p&gt;&lt;/p&gt;

&lt;simpletable&gt;
&lt;sthead&gt;
&lt;stentry&gt;Message number&lt;/stentry&gt;
&lt;stentry&gt;Type&lt;/stentry&gt;
&lt;stentry&gt;Message text&lt;/stentry&gt;
&lt;stentry&gt;Action&lt;/stentry&gt;
&lt;/sthead&gt;

&lt;xsl:apply-templates select="message[substring(@id,1,4)='DOTA']" /&gt;

&lt;/simpletable&gt;
&lt;/section&gt;

&lt;!-- put all the Java messages in a simple table --&gt;
&lt;section id="java"&gt;
&lt;title&gt;Java messages&lt;/title&gt;
&lt;p&gt;&lt;/p&gt;

&lt;simpletable&gt;
&lt;sthead&gt;
&lt;stentry&gt;Message number&lt;/stentry&gt;
&lt;stentry&gt;Type&lt;/stentry&gt;
&lt;stentry&gt;Message text&lt;/stentry&gt;
&lt;stentry&gt;Action&lt;/stentry&gt;
&lt;/sthead&gt;

&lt;xsl:apply-templates select="message[substring(@id,1,4)='DOTJ']" /&gt;

&lt;/simpletable&gt;
&lt;/section&gt;

&lt;!-- put all the XSLT messages in a simple table --&gt;
&lt;section id="xslt"&gt;
&lt;title&gt;XSLT messages&lt;/title&gt;
&lt;p&gt;&lt;/p&gt;

&lt;simpletable&gt;
&lt;sthead&gt;
&lt;stentry&gt;Message number&lt;/stentry&gt;
&lt;stentry&gt;Type&lt;/stentry&gt;
&lt;stentry&gt;Message text&lt;/stentry&gt;
&lt;stentry&gt;Action&lt;/stentry&gt;
&lt;/sthead&gt;

&lt;xsl:apply-templates select="message[substring(@id,1,4)='DOTX']" /&gt;

&lt;/simpletable&gt;
&lt;/section&gt;

&lt;/refbody&gt;
&lt;/reference&gt;

&lt;/xsl:template&gt;

&lt;!-- Reformat an individual message --&gt;
&lt;xsl:template match="message"&gt;
 
&lt;strow&gt;
&lt;stentry&gt;
&lt;msgnum&gt;
&lt;xsl:apply-templates select="@id" /&gt;&lt;/msgnum&gt;
&lt;/stentry&gt;
&lt;stentry&gt;
&lt;xsl:apply-templates select="@type" /&gt;
&lt;/stentry&gt;
&lt;stentry&gt;
&lt;msgph&gt;
&lt;xsl:apply-templates select="reason" /&gt;&lt;/msgph&gt;
&lt;/stentry&gt;
&lt;stentry&gt;
&lt;xsl:apply-templates select="response" /&gt;
&lt;/stentry&gt;

&lt;/strow&gt;

&lt;/xsl:template&gt;


&lt;xsl:template match="description"&gt;
&lt;p&gt;
&lt;td&gt;&lt;xsl:value-of select="."/&gt;&lt;/td&gt;
&lt;/p&gt;
&lt;/xsl:template&gt;

&lt;xsl:template match="link"&gt;
&lt;a&gt;
&lt;xsl:attribute name="href"&gt;
&lt;xsl:value-of select="."/&gt;
&lt;/xsl:attribute&gt;
Item link&lt;/a&gt;
&lt;/xsl:template&gt;

&lt;/xsl:stylesheet&gt;
</codeblock>
		</section>
	</conbody>
</concept>
