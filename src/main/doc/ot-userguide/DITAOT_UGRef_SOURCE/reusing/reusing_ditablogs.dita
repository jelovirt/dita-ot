<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="reusing_ditablogs">
	<title>DITAblogs (content reuse)</title>
	<prolog>
		<author type="creator">Anna van Raaphorst</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-05-01"/>
			<revised modified="2007-04-03"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>reuse concepts and techniques</keyword>
				<keyword>content reuse concepts and techniques</keyword>
				<indexterm>reuse concepts and techniques<indexterm>DITAblogs for</indexterm>
				</indexterm>
				<indexterm>content reuse concepts and techniques<indexterm>DITAblogs for</indexterm>
				</indexterm>
				<indexterm>DITAblogs<indexterm>content reuse concepts and techniques</indexterm>
				</indexterm>
				<indexterm>content reference mechanism</indexterm>
				<indexterm>conref</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<section>
			<title>How we reused content</title>
			<p>The DITA core vocabulary, which is a key feature of this document, has provided the authors many opportunities for content reuse. Most of the "about" topics in the book are "conref'ed" from the core vocabulary topic of the same name. For example, here is the core vocabulary content for the Ant topic:
		<codeblock>
&lt;section id="ant_term"&gt;
&lt;p&gt;Ant is a Java-based, open source tool provided by the Apache Foundation 
to automatically implement a sequence of build actions defined in an Ant build script. 
The Ant functionality is similar to the more well-known UNIX make and Windows nmake build tools; 
however, instead of using shell-based commands, like make, Ant uses Java classes.&lt;/p&gt;
&lt;p&gt;The configuration files are XML-based, calling out a target tree 
where various tasks get executed. Each task is run by an object 
that implements a particular task interface. 
Ant can be used for both software and document builds.&lt;/p&gt;
&lt;p&gt;DITA Open Toolkit provides Java code and a set of XSLT transform scripts 
for producing different types of output, for example XHTML, Eclipse help, JavaHelp, and PDF. 
build scripts build DITA output by controlling the execution of the DITA Open Toolkit Java code 
and the XSLT transform scripts.&lt;/p&gt;
&lt;p&gt;Ant must be installed in your DITA processing environment for DITA Open Toolkit to function.&lt;/p&gt;
		</codeblock>
			</p>
			<p>Here is the conref in the About Ant topic:
		<codeblock>
&lt;conbody&gt;
&lt;section conref="../core_vocabulary/ant.dita#ant/ant_term"&gt;
&lt;/section&gt;
		</codeblock>
			</p>
		</section>
	</conbody>
</concept>
