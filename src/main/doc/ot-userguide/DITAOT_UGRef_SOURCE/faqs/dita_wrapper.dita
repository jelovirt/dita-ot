<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="dita_wrapper">
	<title>Should I set my root element to &lt;dita&gt; or &lt;concept&gt; (or &lt;task&gt; or &lt;reference&gt;)?</title>
	<prolog>
		<author type="creator">Don Day</author>
		<author type="contributor">Anna van Raaphorst</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-05-01"/>
			<revised modified="2006-10-17"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>dita root element</keyword>
				<indexterm>dita root element</indexterm>
				<indexterm>dita wrapper</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<p>
			<b>Contributing author: </b>Don Day</p>
		<p>
			<b>Date: </b>2006</p>
		<p>Using &lt;dita&gt; as your root element (which is the default behavior for FrameMaker DITA Edition and XMetaL DITA Edition) provides the following benefits for DITA information planners:</p>
		<ul>
			<li>It allows writers to manage multiple topics in a single editing instance (which is not a problem because they can still cross-reference any contained topic individually).</li>
			<li>The nesting rules in this ditabase context allow any of concept, task, or reference child topics, which might be useful if you are creating a single overview task that starts with a concept and then nests two or three related tasks that are unique to the scope of this overview topic.</li>
		</ul>
		<p>The key disadvantages of relying on the &lt;dita&gt; wrapper consistently is that the topics within it cannot be topicref'ed individually to be output as their own nodes in a map.This behavior is consistent for the occasional overview topic with dedicated content, but in general you would prefer individual topics for best ease of reuse. (This behavior is the default for XMLmind and Serna.)</p>
		<p>DITA Open Toolkit is agnostic to any starting element, as long as it is either a map, a topic, a specialization of either, or a &lt;dita&gt; file. All outputs produce intermediate, fully-resolved topics in the <filepath>temp</filepath> directory. But whereas the HTML-based transforms that produce standalone result files work directly on these intermediate topics, the aggregation-based outputs (FO and RTF) do a subsequent topicmerge step into a single intermediate file as input to their respective final transforms. Again, as long as the process starts with anything that is ostensibly a map or topic, a "correct" output in terms of its own top-level structure will result.</p>
		<p>A &lt;dita&gt; file always results in a single deliverable, whether processed by reference in a map or individually from the command line. When you process a &lt;dita&gt; file with peer topics to HTML, it will produce a single, well-formed HTML file in which the content of the peer topics show as a sequence of &lt;h1&gt; titles followed by their respective content. In other words, it is still a valid output, but the HTML deliverable is always a single output instance, following the input file structure. </p>
		<p>One way to use this behavior to some advantage is to reference the contained topics via conref, liberating them for reuse in different sequences. For example, you can rearrange the sequences in this construction, and thereby change the order (or even the optionality of inclusion) of what the standalone &lt;dita&gt; file produces.
		<codeblock>
&lt;dita&gt;
&lt;topic conref="sometopic.dita#sometarget"&gt;&lt;title/&gt;&lt;/topic&gt;
&lt;topic conref="othertopic.dita#othertarget"&gt;&lt;title/&gt;&lt;/topic&gt;
...
&lt;topic conref="end.dita#last"&gt;&lt;title/&gt;&lt;/topic&gt;
&lt;/dita&gt;
		</codeblock>
		</p>
		<p>Obviously, to achieve this "aggregated maplet" advantage, you must have separated those topics as standalone chunks in the first place. The result will still be a single output instance, unlike true map topicrefs. But you can change the order as needed, and conditionalize the conref even. Your analysis of the information architecture will lead to deciding which of the possible arrangements is best for your situation. Of the possibilities I've mentioned, all are "preferred roots" if the design so requires. You as an author should request that your authoring tool of choice allows you to manage the DITA architecture as needed.</p>
	</conbody>
</concept>
