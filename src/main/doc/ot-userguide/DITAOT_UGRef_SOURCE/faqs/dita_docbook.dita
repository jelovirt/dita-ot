<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="dita_docbook">
	<title>How does DITA differ from DocBook?</title>
	<prolog>
		<author type="creator">IBM</author>
		<author type="contributor">Anna van Raaphorst</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-05-01"/>
			<revised modified="2007-04-15"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>DITA versus DocBook</keyword>
				<indexterm>DITA (Darwin Information Typing Architecture)<indexterm>comparison to DocBook</indexterm>
				</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<p>
			<b>Contributing author: </b>IBM</p>
		<p>
			<b>Date: </b>August 8, 2006</p>
		<p>DocBook and DITA take fundamentally different approaches.</p>
		<p>DocBook was originally designed for a single, continuous technical narrative, where the narrative might be an article, book, or multivolume length. Through transforms, DocBook can "chunk" this information into topics to provide support for websites and other information sets. Because the goal of the DocBook DTD is to handle all standard requirements for technical documentation, the usage model encourages customization to exclude elements that aren't local requirements. The usage model supports but discourages local extensions because of the potential for unknown new elements to break tool support and interoperability.</p>
		<p>By contrast, DITA was designed for discrete technical topics. DITA collects topics into information sets, potentially using filtering criteria. The core DITA information types are not intended to cover all requirements, but rather to provide a base for meeting new requirements through extension. Extension is encouraged, but new elements must be recognizable as specializations of existing elements. Through generalization, DITA provides for tool reuse and interoperability.</p>
		<p>Each approach has its strengths. DocBook would be the likely choice for a technical narrative. DITA would be the likely choice for large, complex collections of topics or for applications that require both extensibility and interoperability. Technical communications groups might want to experiment with both packages to determine which approach is better suited for their processes and outputs.</p>
	</conbody>
	<related-links>
		<link href="../introduction/aboutdita.dita" scope="local"/>
		<link href="../processing/processing_docbook.dita" scope="local"/>
	</related-links>
</concept>
