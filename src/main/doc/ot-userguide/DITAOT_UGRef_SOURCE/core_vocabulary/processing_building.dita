<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="processing_building">
	<title>Processing (building)</title>
	<prolog>
		<author type="creator">Anna van Raaphorst</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-05-01"/>
			<revised modified="2007-04-17"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>processing</keyword>
				<keyword>building</keyword>
				<indexterm>processing (building)<indexterm>DITA files</indexterm>
				</indexterm>
				<indexterm>building (processing)<indexterm>DITA files</indexterm>
				</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<section id="processing_building_term">
			<p>Processing is producing output files from a set of DITA source files.</p>
			<p>DITA Open Toolkit, working with other tools like the Java Development Kit (JDK) and Ant, provides a method to process DITA documents.</p>
			<p>The following figure provides an overview of the processing and publishing of DITA documents using DITA Open Toolkit:
			<ul>
				<li>In step 1, the Ant build tool is initialized (either through an optional batch script or directly from the command line), and arguments that will be passed from the Ant script to Ant are validated.</li>
				<li>In step 2, the Ant build tool calls the Toolkit, which produces the rendered temporary files. Input to this step is the <filepath>.dita</filepath> and <filepath>.ditamap</filepath> source files, and the DITA project DTDs or schemas.</li>
				<li>In step 3, the XSLT processor (SAXON or Xalan) produces the published output files. Input to this step are the XSLT stylesheets for the project, and the temporary files produced in step 2.</li>
			</ul>
			</p>
			<p>
			<image href="../images/processing_overview.png"/>
		</p>
		</section>
	</conbody>
</concept>
