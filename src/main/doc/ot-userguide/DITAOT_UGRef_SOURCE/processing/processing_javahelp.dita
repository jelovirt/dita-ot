<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "../dtd/task.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<task id="processing_javahelp">
	<title>Processing to JavaHelp targets</title>
	<prolog>
		<author type="creator">Richard Johnson</author>
		<author type="contributor">Anna van Raaphorst</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-06-10"/>
			<revised modified="2007-04-15"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>processing DITA file</keyword>
				<keyword>building DITA file</keyword>
				<keyword>garage sample</keyword>
				<keyword>JavaHelp</keyword>
				<indexterm>processing (building)<indexterm>to JavaHelp targets</indexterm>
				</indexterm>
				<indexterm>building (processing)<indexterm>to JavaHelp targets</indexterm>
				</indexterm>
				<indexterm>JavaHelp targets, processing (building) to</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<taskbody>
		<prereq>This topic assumes you have already installed DITA Open Toolkit and its prerequisite products, and have verified your installation, as described in the installation chapter of this document. To view JavaHelp output, you must have the JavaHelp processor installed. See <xref href="../installing/windows_installingjavahelp.dita" format="dita"/> for information on how to do this.
		<note>DITA Open Toolkit support for JavaHelp is adequate. However, in our experience, published JavaHelp results are less than adequate due to limitations of the Sun JavaHelp processor.</note>
		</prereq>
		<context>In general, the instructions in this topic assume the Windows environment; the procedure is very similar in other operating system environments.</context>
		<steps>
			<step>
				<cmd>If you have not already done so, create <filepath>DITASAMPLE_GARAGE_SOURCE</filepath> and <filepath>DITASAMPLE_GARAGE_OUTPUT</filepath> directories in the root directory of your <filepath>C:</filepath> drive (or your <filepath>/home</filepath> directory in Linux).</cmd>
			</step>
			<step>
				<cmd>If you have not already done so, copy the garage sample files into the <filepath>DITASAMPLE_GARAGE_SOURCE</filepath> directory.</cmd>
				<info>
					<p>You should have a directory structure that looks like this:</p>
					<p>
						<image href="../images/garagesample_directory.png"/>
					</p>
				</info>
			</step>
			<step>
				<cmd>View and edit, if necessary for your specific working environment, <filepath>DITASAMPLE_GARAGE_SOURCE/ant_scripts/garage_hierarchy_all.xml</filepath>.</cmd>
				<info>
					<p>These are the significant Ant parameters and how they are set:
				<ul>
							<li>
								<b>args.input</b> is set to use the hierarchy ditamap: <filepath>hierarchy.ditamap</filepath> in the <filepath>DITASAMPLE_GARAGE_SOURCE</filepath> directory.</li>
							<li>
								<b>output.dir</b> is set to send the output to <filepath>DITASAMPLE_GARAGE_OUTPUT</filepath>.</li>
							<li>
								<b>transtype</b> is set to javahelp.</li>
						</ul>
					</p>
				</info>
			</step>
			<step>
				<cmd>In the Command Prompt window, move to <filepath>DITASAMPLE_GARAGE_SOURCE/ant_scripts</filepath> and invoke the above Ant script.</cmd>
				<stepxmp>For example: <userinput>ant -f garage_hierarchy_all.xml dita2javahelp</userinput>
				</stepxmp>
				<info>Alternatively, if you are processing in the Windows environment, you can use the garage sample batch script (<filepath>runbuild.bat</filepath>): <userinput>runbuild dita2javahelp</userinput>. The batch script is in the <filepath>DITASAMPLE_GARAGE_SOURCE</filepath> directory. The processing is the same, except the batch script filters some of the processing messages into the log file, which is created in the <filepath>DITASAMPLE_GARAGE_OUTPUT</filepath> directory during processing.</info>
				<info>Alternatively, if you are processing in the Linux or UNIX environment, you can create your own batch script to perform the same functions as <filepath>runbuild.bat</filepath>.</info>
			</step>
			<step>
				<cmd>After the JavaHelp file has processed successfully, go to the <filepath>DITASAMPLE_GARAGE_OUTPUT</filepath> directory.</cmd>
				<info>Your directory structure should look like this:
				<p>
						<image href="../images/processing_javahelp1.png"/>
					</p>
					<p>The <filepath>javahelp</filepath> subdirectory should contain these directories and files:</p>
					<p>
						<image href="../images/processing_javahelp2.png"/>
					</p>
				</info>
			</step>
			<step>
				<cmd>Using the JavaHelp Viewer, open the file <filepath>hierarchy_helpset.hs</filepath> to view the JavaHelp output. You can start the Viewer by entering the command <userinput>java -jar %JHHOME%\demos\bin\hsviewer.jar</userinput> from the command line.</cmd>
				<info>The window should look something like this:
				<p>
						<image href="../images/processing_javahelp_viewer.png"/>
					</p>
				</info>
			</step>
		</steps>
	</taskbody>
</task>
