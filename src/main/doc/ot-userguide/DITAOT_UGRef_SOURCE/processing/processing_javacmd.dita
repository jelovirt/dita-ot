<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2005 All Rights Reserved. -->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "..\dtd\concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="processing_javacmd" xml:lang="en-us">
	<title>Processing from the Java command line</title>
	
	<prolog>
		<author type="creator">Richard Johnson</author>
		<author type="contributor">Anna van Raaphorst</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-06-10"/>
			<revised modified="2007-12-02"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>processing DITA file</keyword>
				<keyword>building DITA file</keyword>
				<keyword>Java command line</keyword>
				<indexterm>processing (building)<indexterm>using the Java command line</indexterm>
				</indexterm>
				<indexterm>building (processing)<indexterm>using the Java command line</indexterm>
				</indexterm>
				<indexterm>Java command line<indexterm>building output using</indexterm>
				</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<section id="javacmdintro">
			<p>Under certain circumstances it may be desirable to run the Toolkit build code by invoking the Java JVM from the command line instead of by invoking Ant. The Toolkit provides a way to do this by supporting a set of command-line parameters. When invoking the Toolkit build code from the Java command line, the inputs to Ant are stored in a temporary file by the Toolkit Java code, and then Ant is invoked to carry out the build.</p>
			<note>When using the Java command line, you still must have Ant installed.</note>
		</section>
		<section>
			<title>Running a Java command line example</title>
			<ol>
				<li>Go to the DITA Open Toolkit installation directory.</li>
				<li>On the command line, enter the following command: 
          <codeblock>java -jar lib/dost.jar /i:samples/sequence.ditamap /outdir:out /transtype:xhtml</codeblock>
				</li>
			</ol>
			<p>This example creates a properties file, and then calls Ant 
        using this properties file to build the garage sample <codeph>sequence.ditamap</codeph> file 
        and produce XHTML output to the <filepath>out</filepath> directory. 
			<note>
					<ul>
						<li>In this example, the character slash preceded by a 
            space is the separator for each parameter.</li>
						<li>The internally generated properties file is saved in the <codeph>${args.logdir}</codeph> directory. 
            The following command shows an example of using this properties file with Ant:
            <codeblock>ant -f build.xml -propertyfile ${args.logdir}/property.temp</codeblock>
						</li>
					</ul>
				</note>
			</p>
		</section>
		<section>
			<title>Supported parameters</title>
			<p>Parameters supplied on the Java command line are equivalent to similar parameters used in Ant build scripts. The Ant build script parameters are described in <xref href="antparms.dita"/>. The following table lists the parameters you can provide on the Java command line and the equivalent parameter that can be supplied in an Ant build script.</p>
			<simpletable>
				<sthead>
					<stentry>Java parameter</stentry>
					<stentry>Equivalent Ant script parameter</stentry>
				</sthead>
				<strow>
					<stentry>/artlbl</stentry>
					<stentry>args.artlbl</stentry>
				</strow>
				<strow>
					<stentry>/basedir</stentry>
					<stentry>basedir</stentry>
				</strow>
				<strow>
					<stentry>/cleantemp</stentry>
					<stentry>clean.temp</stentry>
				</strow>
				<strow>
					<stentry>/copycss</stentry>
					<stentry>args.copycss</stentry>
				</strow>
				<strow>
					<stentry>/css</stentry>
					<stentry>args.css</stentry>
				</strow>
				<strow>
					<stentry>/cssroot</stentry>
					<stentry>args.cssroot</stentry>
				</strow>
				<strow>
					<stentry>/csspath</stentry>
					<stentry>args.csspath</stentry>
				</strow>
				<strow>
					<stentry>/ditalocale</stentry>
					<stentry>args.dita.locale</stentry>
				</strow>
				<strow>
					<stentry>/draft</stentry>
					<stentry>args.draft</stentry>
				</strow>
				<strow>
					<stentry>/ditadir</stentry>
					<stentry>dita.dir</stentry>
				</strow>
				<strow>
					<stentry>/ditaext</stentry>
					<stentry>dita.extname</stentry>
				</strow>
				<strow>
					<stentry>/eclipsecontenttoc</stentry>
					<stentry>args.eclipsecontent.toc</stentry>
				</strow>
				<strow>
					<stentry>/eclipsehelptoc</stentry>
					<stentry>args.eclipsehelp.toc</stentry>
				</strow>
				<strow>
					<stentry>/filter</stentry>
					<stentry>args.input.valfile</stentry>
				</strow>
				<strow>
					<stentry>/fouserconfig</stentry>
					<stentry>args.fo.userconfig</stentry>
				</strow>
				<strow>
					<stentry>/foimgext</stentry>
					<stentry>args.fo.img.ext</stentry>
				</strow>
				<strow>
					<stentry>/fooutputrellinks</stentry>
					<stentry>args.fo.output.rel.links</stentry>
				</strow>
				<strow>
					<stentry>/ftr</stentry>
					<stentry>args.ftr</stentry>
				</strow>
				<strow>
					<stentry>/generateouter</stentry>
					<stentry>generate.copy.outer</stentry>
				</strow>
				<strow>
					<stentry>/hdf</stentry>
					<stentry>args.hdf</stentry>
				</strow>
				<strow>
					<stentry>/hdr</stentry>
					<stentry>args.hdr</stentry>
				</strow>
				<strow>
					<stentry>/htmlhelpincludefile</stentry>
					<stentry>args.htmlhelp.includefile</stentry>
				</strow>
				<strow>
					<stentry>/i</stentry>
					<stentry>args.input</stentry>
				</strow>
				<strow>
					<stentry>/id</stentry>
					<stentry>dita.input.dirname</stentry>
				</strow>
				<strow>
					<stentry>/if</stentry>
					<stentry>dita.input</stentry>
				</strow>
				<strow>
					<stentry>/indexshow</stentry>
					<stentry>args.indexshow</stentry>
				</strow>
				<strow>
					<stentry>/javahelpmap</stentry>
					<stentry>args.javahelp.map</stentry>
				</strow>
				<strow>
					<stentry>/javahelptoc</stentry>
					<stentry>args.javahelp.toc</stentry>
				</strow>
				<strow>
					<stentry>/logdir</stentry>
					<stentry>args.logdir</stentry>
				</strow>
				<strow>
					<stentry>/onlytopicinmap</stentry>
					<stentry>onlytopic.in.map</stentry>
				</strow>
				<strow>
					<stentry>/outdir</stentry>
					<stentry>output.dir</stentry>
				</strow>
				<strow>
					<stentry>/outercontrol</stentry>
					<stentry>outer.control</stentry>
				</strow>
				<strow>
					<stentry>/outext</stentry>
					<stentry>args.outext</stentry>
				</strow>
				<strow>
					<stentry>/provider</stentry>
					<stentry>args.eclipse.provider</stentry>
				</strow>
				<strow>
					<stentry>/tempdir</stentry>
					<stentry>dita.temp.dir</stentry>
				</strow>
				<strow>
					<stentry>/transtype</stentry>
					<stentry>transtype</stentry>
				</strow>
				<strow>
					<stentry>/validate</stentry>
					<stentry>validate</stentry>
				</strow>
				<strow>
					<stentry>/version</stentry>
					<stentry>args.eclipse.version</stentry>
				</strow>
				<strow>
					<stentry>/xhtmltoc</stentry>
					<stentry>args.xhtml.toc</stentry>
				</strow>
				<strow>
					<stentry>/xsl</stentry>
					<stentry>args.xsl</stentry>
				</strow>
			</simpletable>
		</section>
	</conbody>
</concept>
