<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="release_14">
	<title>Release 1.4 and 1.4.1 information</title>
	<prolog>
		<author type="creator">Anna van Raaphorst</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2007"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2007-05-31"/>
			<revised modified="2007-12-03"/>
		</critdates>
		<metadata>
			<keywords>
				<indexterm>release 1.4 information</indexterm>
				<indexterm>release 1.4.1 information</indexterm>
				<indexterm>book deliverable theme of release 1.4</indexterm>
				<indexterm>bookmap element</indexterm>
				<indexterm>mapref element</indexterm>
				<indexterm>change history metadata</indexterm>
				<indexterm>annotation metadata</indexterm>
				<indexterm>book-level processing</indexterm>
				<indexterm>glossary elements</indexterm>
				<indexterm>indexing features in release 1.4</indexterm>
				<indexterm>index-base element</indexterm>
				<indexterm>see indexing element</indexterm>
				<indexterm>index-see element</indexterm>
				<indexterm>see also indexing element</indexterm>
				<indexterm>index-see-also element</indexterm>
				<indexterm>sort as indexing element</indexterm>
				<indexterm>index-sort-as element</indexterm>
				<indexterm>page range indexing element</indexterm>
				<indexterm>index-page-range element</indexterm>
				<indexterm>graphic scaling</indexterm>
				<indexterm>abstract element</indexterm>
				<indexterm>data extensibility theme of release 1.4</indexterm>
				<indexterm>extensible metadata attributes</indexterm>
				<indexterm>metadata attributes, extensible</indexterm>
				<indexterm>universal attributes</indexterm>
				<indexterm>data element</indexterm>
				<indexterm>foreign content vocabularies, support for</indexterm>
				<indexterm>unknown element</indexterm>
				<indexterm>xNAL standard</indexterm>
				<indexterm>OASIS xNAL standard</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<section id="release1.4_overview">
			<title>Overview</title>
			<p>Release 1.4.1 is a maintenance release.</p>
			<p>DITA Open Toolkit release 1.4 is a major release to add new and improved functionality, fulfill new requirements, and fix bugs.
			The single major theme of release 1.4 is support of the DITA 1.1 standard. 
			<note>Some of the DITA 1.1 support was included or started in DITA Open Toolkit 1.3.</note>
			</p>
			<p>DITA 1.1 has two major themes:
			<ul>
					<li>
						<b>Book deliverables (revision of the demo bookmap specialization in prior releases)</b>
						<ul>
							<li>Book-level processing</li>
							<li>Indexing capabilities, including see, see also, sort order, and page range</li>
							<li>Graphic scaling improvements</li>
							<li>Glossary-related elements</li>
							<li>New &gt;abstract&gt; element family, which also  includes the &lt;shortdesc&gt; element from prior releases</li>
						</ul>
					</li>
					<li>
						<b>Data extensibility</b>
						<ul>
							<li>Improved attribute behavior</li>
							<li>An &lt;unknown&gt; and a &lt;foreign&gt; element to support foreign content vocabularies like MathML and SVG</li>
							<li>New &lt;data&gt; element</li>
						</ul>
					</li>
				</ul>
			</p>
		</section>
		<section id="release1.4_book">
			<title>Book deliverables</title>
			<p>
				<b>Book-level processing: General updates</b>
				<ul>
					<li>Consistent support for generated and user-defined lists (for example, table of contents, tables, figures, abbreviations, glossary, index, and bibliography)</li>
					<li>Documentation types (for example, reference manual and user guide)</li>
				</ul>
			</p>
			<p>
				<b>Book-level processing: Specific updates</b>
				<ul>
					<li>Book &lt;title&gt; element, and division of the title into "library" and "title"</li>
					<li>xNAL compatibility with naming conventions
			<p>Release 1.4 provides a transformational equivalence between bookmap and xNAL (extensible Name and Address Language, an OASIS standard) definitions for names and addresses. This equivalence enables XML-aware tools in workflow systems to capture and manipulate DITA bookmap names and addresses in a standard way.</p>
					</li>
					<li>Special notices section at the front of the document</li>
					<li>New group of navigation list element to specify the addition of automated or compiled content lists for document navigation (table of contents, figures, and tables)</li>
					<li>Additional address elements (for example, &lt;postalcode&gt;)</li>
					<li>Additional element for organization and name (for example, &lt;emailaddress&gt; and &lt;contactnumbery&gt;)</li>
				</ul>
			</p>
			<p>
				<b>Indexing capabilities</b>
			</p>
			<p>Additions include the following new elements and element families:
			<ul>
					<li>
						<b>&lt;index-base&gt;</b>
						<p>Common element that enables indexing specializations (both standard and user-defined). With this new functionality index generators can handle indexing elements they understand while filtering out those they cannot handle. A new indexing domain &lt;indexing-d&gt; accommodates the specializations of &lt;index-base&gt;.</p>
					</li>
					<li>
						<b>&lt;index-see&gt;</b>
						<p>Example (source):
				<codeblock>
&lt;indexterm&gt;Carassius auratus
&lt;index-see&gt;Goldfish&lt;/index-see&gt;
&lt;/indexterm&gt;			
				</codeblock>
				Example (output):
				<codeblock>
Carassius auratus, <i>see</i> Goldfish
				</codeblock>
						</p>
					</li>
					<li>
						<b>&lt;index-see-also&gt;</b>
						<p>Example (source):
				<codeblock>
&lt;indexterm&gt;Carp
&lt;index-see-also&gt;Goldfish&lt;/index-see-also&gt;
&lt;/indexterm&gt;			
				</codeblock>
				Example (output):
				<codeblock>
Carp, 56
  <i>see also</i> Goldfish
				</codeblock>
						</p>
					</li>
					<li>
						<b>&lt;index-sort-as&gt;</b>
						<p>One common use for this functionality is an index that contains special characters at the beginning of what would otherwise be text entries (for example, the DITA tag &lt;title&gt;, which you want to be listed in the "t" section of the index rather than with the special characters.</p>
						<p>Example (source):
				<codeblock>
&lt;indexterm&gt;&amp;lt;title&amp;gt;
&lt;index-sort-as&gt;title&lt;/index-sort-as&gt;
&lt;/indexterm&gt;
				</codeblock>
						</p>
					</li>
					<li>
						<b>&lt;indexterm start""&gt; and &lt;indexterm end=""/&gt;</b>
						<p>These new elements would be used where a text discussion extends over more than one page. In Toolkit 1.4, you implement this feature by placing the "start" attribute at the beginning of the discussion, and the "end" attribute at the end of the discussion. In the example below the ellipses represent several pages of output.
				<note>Indexed ranges in DITA cannot span topics.</note>
						</p>
						<p>Example (source):
				<codeblock>
&lt;indexterm start="level-1-goldfish"&gt;goldfish&lt;/indexterm&gt;
. . .
&lt;indexterm end="level-1-goldfish"/indexterm&gt;
				</codeblock>
				Example (output):
				<codeblock>
goldfish, 34-36
				</codeblock>
						</p>
					</li>
				</ul>
			</p>
			<p>
				<b>Graphic scaling improvements</b>
			</p>
			<p>These changes are additions or changes to attributes of the the &lt;image&gt; element.</p>
			<p>In prior releases of DITA Open Toolkit, graphic size could be specified only by number of pixels on the element's height and width attributes.</p>
			<p>In release 1.4, users can specify:
			<ul>
					<li>A percentage value to which to scale the intrinsic size of the image</li>
					<li>An absolute value using a numeric value and one of the following units of measure: px (pixels, the default value), pc (picas), pt (points), in (inches), cm (centimeters), mm (millimeters), and em (ems)</li>
				</ul>
			.</p>
			<p>
				<b>Glossary-related elements</b>
			</p>
			<p>The DITA 1.1 specification and Toolkit 1.4 implementation meet the core publishing requirements for books and online deliverables:
			<ul>
					<li>Publishing a glossary listing in the back of a book</li>
					<li>Offering inline definitions in a help system or website</li>
					<li>Guiding authors to use consistent terminology by providing a controlled vocabulary during content creation</li>
				</ul>
			</p>
			<p>The new specialized topic is for reusable glossary entries.
			Each sense of a term is defined in a separate topic. Deliverables assemble the glossary for the terminology used in content by selecting from a pool of available glossary definitions. A formatting process may collate the definitional topics based on the term, and each sense of the term is indented under the term in the output.</p>
			<p>Putting each glossary definition in a separate topic is better suited for translation because terms that are the same in one language may be different in others. Therefore, glossary definitions should be collated based on the translated terms rather than assuming that a term will have the same set of definitions in all languages.
			In DITA OT 1.4 these are treated as ordinary topics; future Toolkit plans call for better automatic grouping.
			</p>
			<p>Example (source):
			<codeblock>
&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE glossentry PUBLIC "-//OASIS//DTD DITA Glossary//EN" "../dtd/glossary.dtd">
&lt;glossary&gt;
&lt;glossentry id="ddl"&gt;
&lt;glossterm&gt;Data Definition Language&lt;/glossterm&gt;
&lt;glossdef&gt;A language used for defining databases . . .&lt;/glossdef&gt;
&lt;/glossentry&gt;
&lt;/glossary&gt;
			</codeblock>
			</p>
			<p>
				<b>New element &lt;abstract&gt;</b>
			</p>
			<p>The &lt;abstract&gt; element can include complex markups besides the &lt;shortdesc&gt; element, which existed in prior releases.</p>
			<p>For example, in the &lt;shortdesc&gt; element you can have paragraphs and a preview paragraph that is used only in previews.</p>
			<p>Example 1
				<codeblock>
&lt;topic&gt;
&lt;title&gt;My title&lt;/title&gt;
&lt;shortdesc&gt;
Short description as well as the preview paragraph.
&lt;/shortdesc&gt;
&lt;body&gt;
. . .
&lt;/body&gt;
&lt;/topic&gt;
				</codeblock>
			</p>
			<p>Example 2
				<codeblock>
&lt;topic&gt;
&lt;title&gt;My title&lt;/title&gt;
&lt;abstract&gt;
&lt;p&gt;
Paragraph in an abstract.
&lt;/p&gt;
&lt;shortdesc&gt;
Short description in the abstract, also the preview.
&lt;/shortdesc&gt;
&lt;/abstract&gt;
&lt;body&gt;
. . .
&lt;/body&gt;
&lt;/topic&gt;

				</codeblock>
			</p>
		</section>
		<section id="release1.4_data">
			<title>Data extensibility</title>
			<p>
				<b>New attributes and improved attribute behavior</b>
			</p>
			<p>In release 1.4 of the Toolkit, a DITA information architect or developer can incorporate new conditional processing attributes for filtering and flagging, or new attributes with no existing equivalent that can be managed and generalized in the same way as conditional processing attributes in prior releases. These new attributes are:
			<ul>
					<li>Identified as conditional processing attributes (when intended for this purpose)</li>
					<li>Preserved during generalization and respecialization</li>
					<li>While generalized, are still operable on by either general or specialized behaviors (for example, conditional processing)</li>
				</ul>
			</p>
			<p>The new attributes and improved attribute behavior is useful in the following ways:
			<ul>
					<li>
						<b>Generic attributes.</b> A DITA information architect or developer adds a new attribute that has no equivalent in standard DITA, for example a phase attribute (<filepath>phases.mod</filepath>) that identifies what phase of a process an element is associated with. To accomplish this, the architect or developer would express the new attribute as a separate domain package, integrate the domain package into the authoring DTDs or schemas, and supply processing behavior for the new attribute and ensure that it works on both the specialized form (phase="develop") and the generalized form (phase(develop)), using the conditional processing match logic as a pattern.</li>
					<li>
						<b>Negative values.</b> You can set a new value in the ditaval that indicates processing should filter out unknown values.
						For example, previously, if you had audiences A, B, and C, they were all included by default. You can now say "exclude by default."
						So if my ditaval lists only audience="C" as include, it can also force the unspecified values A and B to be excluded.
					</li>
				</ul>
			</p>
			<p>
				<b>New element &lt;foreignn&gt;</b>
			</p>
			<p>The &lt;unknown&gt; element, new in release 1.4, allows users to incorporate existing standard vocabularies (for example, MathML and SVG), as inline objects. The default processing behavior for &lt;foreign&gt; text is to ignore it. This can be overridden with specialized DTD and schema definitions. For a defined vocabulary like MathML, the schema definition would point to the standard namespace on the web.</p>
			<p>Example (use of mathML inside a DITA file)
			<codeblock>
. . . as in the formula
&lt;mathML&gt;
&lt;mml:math display="block"&gt;
&lt;mml:mrow&gt;
&lt;mml:mo&gt;&amp;sum;&lt;/mml:mo&gt;
&lt;mml:mn&gt;4&lt;/mml:mn&gt;
&lt;mml:mo&gt;+&lt;/mml:mo&gt;
&lt;mml:mi&gt;x&lt;/mml:mi&gt;
&lt;/mml:mrow&gt;
&lt;/mml:math&gt;
&lt;mathMLAlternate&gt;4 + x&lt;/mathMLAlternate&gt;
&lt;mathML&gt;.
&lt;/p&gt;
			</codeblock>
			</p>
			<p>Release 1.4 also has a new element &lt;unknown/&gt; for other, unanticipated non-DITA content.</p>
			<p>
				<b>New element &lt;data&gt;</b>
			</p>
			<p>Prior Toolkit releases provided limited extensibility for properties as well as embedded data (for example, the form fields that many word processors can embed in content). For the topic as a whole, the information architect or designer could specialize only single values from the &lt;othermeta&gt; element, but could not define complex data structures comparable to the &lt;audience&gt; or &lt;prodinfo&gt; properties. As a result, users were forced to specialize body content to create complex data structures. Within the topic content, users could specialize data from the &lt;state&gt; element, which supported only single values. As a result, users were forced to abuse discourse elements like &lt;ph&gt; for data that was not a textual phrase.</p>
			<p>In release 1.4, the &lt;data&gt; element has been added for values intended to be consumed primarily by automated processes. Typical applications include both complex metadata structures and hybrid documents with both discourse and data values. Users can nest &lt;data&gt; elements for structures and specialize the &lt;data&gt; element for more precise semantics and for constraints on structures and values.</p>
			<p>Processes can harvest the data values for a machine-processable representation like RDF. By default, formatting for discourse skips the &lt;data&gt; element. However, a specialization can extend processing to include data values in appropriate formatted outputs (similar to form fields in word processor formats).</p>
			<p>It would <i>not</i> be appropriate to specialize the &lt;data&gt; element for content within the discourse flow (for example, for a special kind of paragraph within the topic body). When generalized and formatted with base processes, the special paragraph would be skipped, mangling the discourse flow.</p>
			<p>Current and potential future uses of the &lt;data&gt; element include:
			<ul>
					<li>The API Reference specialization (an announced work-in-progress at IBM) is being updated to use the &lt;data&gt; element to model complex application interfaces. </li>
					<li>The definition of a complex envelope for any application in which human-readable content is a payload is now possible.</li>
					<li>A library of specialized &lt;data&gt; elements to be used as building blocks for transactional documents could be produced.</li>
				</ul>
			</p>
			<p>Example (Toolkit 1.4 bookmap feature)
			<codeblock>
&lt;bookmap id="taskbook"&gt;
&lt;booktitle&gt;
&lt;booklibrary&gt;Retro Tools&lt;/booklibrary&gt;
&lt;mainbooktitle&gt;Product tasks&lt;/mainbooktitle&gt;
&lt;booktitlealt&gt;Tasks and what they can do&lt;/booktitlealt&gt;&lt;/booktitle&gt;
&lt;bookmeta&gt;
&lt;author&gt;Howe Tuduit&lt;/author&gt;
&lt;bookid&gt;&lt;isbn&gt;071271271X&lt;/isbn&gt;&lt;booknumber&gt;SG99-9999-00&lt;/booknumber&gt;&lt;maintainer&gt;
&lt;organization&gt;Retro Tools&lt;/organization&gt;&lt;person&gt;&lt;/person&gt;&lt;/maintainer&gt;&lt;/bookid&gt;
&lt;bookrights&gt;&lt;copyrfirst&gt;&lt;year&gt;2004&lt;/year&gt;&lt;/copyrfirst&gt;&lt;copyrlast&gt;&lt;year&gt;2007&lt;/year&gt;
&lt;/copyrlast&gt;&lt;bookowner&gt;&lt;organization&gt;Retro Tools, Inc.&lt;/organization&gt;&lt;/bookowner&gt;
&lt;/bookrights&gt;
&lt;/bookmeta&gt;
&lt;frontmatter&gt;
&lt;booklists&gt;
&lt;toc/&gt;&lt;/booklists&gt; 
&lt;bookabstract href="taskbook-abstract.dita"/&gt;
&lt;notices href="notices.dita"&gt;
&lt;topicref href="trademarks.dita"&gt;&lt;/topicref&gt;
&lt;/notices&gt;
&lt;preface href="task_preface.dita"&gt;&lt;/preface&gt;
&lt;/frontmatter&gt;
&lt;chapter href="installing.dita"&gt;
&lt;topicref href="installstorage.dita"&gt;
&lt;topicref href="unscrewcover.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="insertdrive.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="replacecover.dita"&gt;&lt;/topicref&gt;
&lt;/topicref&gt;
&lt;topicref href="installwebserver.dita"&gt;
&lt;topicref href="closeprograms.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="runsetup.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="restart.dita"&gt;&lt;/topicref&gt;
&lt;/topicref&gt;
&lt;topicref href="installdb.dita"&gt;&lt;/topicref&gt;
&lt;/chapter&gt;
&lt;chapter href="configuring.dita"&gt;
&lt;topicref href="configurestorage.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="configurewebserver.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="configuredatabase.dita"&gt;&lt;/topicref&gt;
&lt;/chapter&gt;
&lt;chapter href="maintaining.dita"&gt;
&lt;topicref href="maintainstorage.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="maintainserver.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="maintaindatabase.dita"&gt;&lt;/topicref&gt;
&lt;/chapter&gt;
&lt;chapter href="troubleshooting.dita"&gt;
&lt;topicref href="drivetrouble.dita"&gt;&lt;/topicref&gt;
&lt;topicref href="databasetrouble.dita"&gt;&lt;/topicref&gt;
&lt;/chapter&gt;
&lt;appendix href="task_appendix.dita"&gt;&lt;/appendix&gt;
&lt;backmatter&gt;
&lt;booklists&gt;
&lt;indexlist/&gt;
&lt;/booklists&gt;
&lt;/backmatter&gt; 
&lt;/bookmap&gt;
			</codeblock>
			</p>
			<p>Example (source code delimiters for automatic refresh of a code fragment, where the &lt;sourceFile&gt;, &lt;startDelimiter&gt;, and &lt;endDelimiter&gt; elements are specialized from &lt;data&gt;, but &lt;codeFragment&gt; is specialized from &lt;codeblock&gt;).
			<note>This is a potential specialization, not  part of the DITA 1.1 standard nor available in the DITA Open Toolkit.</note>
				<codeblock>
&lt;example&gt;
&lt;title&gt;An important coding technique&lt;/title&gt;
&lt;codeFragment&gt;
&lt;sourceFile value="helloWorld.java"/&gt;
&lt;startDelimiter value="FRAGMENT_START_1"/&gt;
&lt;endDelimiter value="FRAGMENT_END_1"/&gt;
. . .
&lt;/codeFragment&gt;
&lt;/example&gt;
			</codeblock>
			</p>
			<p>Example (real estate property for a house description, where the &lt;realEstateProperty&gt; and everything it contains are specialized from &lt;data&gt; but &lt;houseDescription&gt; is specialized from &lt;section&gt;).
			<note>This is a potential specialization, not  part of the DITA 1.1 standard nor available in the DITA Open Toolkit.</note>
				<codeblock>
&lt;houseDescription&gt;
&lt;title&gt;A great home for sale&gt;
&lt;realEstateProperty&gt;
&lt;realEstateBlock value="B7"/&gt;
&lt;realEstateLot value="4003"/&gt;
. . . 
&lt;/realEstateProperty&gt;
&lt;p&gt;This elegant property . . .&lt;/p&gt;
&lt;object data=""B7_4003_tour360Degrees.swf"/>
&lt;/houseDescription&gt;
			</codeblock>
			</p>
			<p>Example (identifies the maintainer of the topic, where &lt;maintainer&gt; is specialized from &lt;data&gt;).
			<note>This is a potential specialization, not  part of the DITA 1.1 standard nor available in the DITA Open Toolkit.</note>
				<codeblock>
&lt;topicref href=""sometopic.dita"&gt;
&lt;topicmeta&gt;
&lt;maintainer&gt;George&lt;maintainer&gt;
&lt;/topicmeta&gt;
. . .
&lt;/topicref&gt;
			</codeblock>
			</p>
			<p>
				<b>Bug fixes in release 1.4.1: 23</b>
			</p>
			<p>
				<b>Patches in release 1.4.1: 5</b>
			</p>
			<p>
				<b>RFE in release 1.4.1: 5</b>
			</p>
			<p>
				<b>Bug fixes in release 1.4: 17</b>
			</p>
			<p>For more information see the Release Notes for DITA Open Toolkit 1.4 and 1.4.1.</p>
		</section>
	</conbody>
</concept>
