<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA Reference//EN"
 "..\dtd\reference.dtd">
<reference id="keyword" xml:lang="en-us">
<title><keyword>keyword</keyword></title>
<shortdesc>The &lt;<keyword>keyword</keyword>&gt; element identifies a keyword
or token, such as a single value from an enumerated list, the name of a command
or parameter, product name, or a lookup key for a message (contrast with <ph> <xref
href="term.dita">term</xref> </ph>). </shortdesc>
<prolog><metadata>
<keywords><indexterm>keyword</indexterm><indexterm>Body elements<indexterm>keyword</indexterm> </indexterm>
<indexterm>keyword</indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p rev="dita13"><q>Keyword</q> means any text that has a unique or
key-like value. For example, a product name. Where there is a element that
has a better meaning for what you are describing, use that element; for example:
use apiname for API names and cmdname for command names. The keyword element
is a generic element; use it when no other element applies. The keyword element
can also be used for reusable text.  Term should be used for inline paragraph
definitions; to indicate what you're defining. PH should be used for general
phrases; when you think that keyword is not appropriate. Inside syntax diagrams
and syntax phrases, use kwd to indicate a programming keyword. In metadata,
a keyword is used to create additional XHTML metadata.</p><p>Specialized elements
derived from &lt;<keyword>keyword</keyword>&gt; may also have extended processing,
such as different formatting or automatic indexing. If the <varname>keyref</varname> attribute
is used, the keyword can be turned into a hyperlink on output (not currently
supported).</p><p>When DITA topics are output to XHTML, any &lt;<keyword>keyword</keyword>&gt;
or &lt;<keyword>indexterm</keyword>&gt; elements in the &lt;<keyword>keywords</keyword>&gt;
metadata element are placed in the Web page metadata. In addition, any index
terms in this context are also used for supported index processing (for example,
for print versions).</p> </section>
<section conref="ibm-ditabase-contains.dita#commonCMdefs/keyword-containedby"></section>
<section conref="ibm-ditabase-contains.dita#commonCMdefs/keyword-contains"></section>
<section> <title>Attributes</title> <simpletable id="keyword_attr"
relcolwidth="2* 3* 1* 1* 1*">
<sthead>
<stentry>Name</stentry>
<stentry>Description</stentry>
<stentry>Data Type</stentry>
<stentry>Default Value</stentry>
<stentry>Required?</stentry>
</sthead>
<strow conref="commonLRdefs.dita#commonLRdefs/keyref-keyword">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="commonLRdefs.dita#commonLRdefs/univ-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="commonLRdefs.dita#commonLRdefs/outputclass">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="commonLRdefs.dita#commonLRdefs/global-atts">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
<strow conref="commonLRdefs.dita#commonLRdefs/class">
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
<stentry></stentry>
</strow>
</simpletable> </section>
<example> <codeblock>&lt;p&gt;The &lt;keyword&gt;assert&lt;/keyword&gt; pragma statement allows messages to be passed
to the emulator, pre-compiler, etc.. </codeblock> </example>
</refbody>
</reference>
