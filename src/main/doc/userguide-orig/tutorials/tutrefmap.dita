<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE dita PUBLIC "-//IBM//DTD DITA Composite//EN"
 "..\dtd\ditabase.dtd">
<dita>
<task id="tutrefmap" xml:lang="en-us">
<title>Tutorial: Creating a reference hierarchy</title>
<shortdesc>Learn how to create a simple reference hierarchy.</shortdesc>
<prolog><metadata>
<keywords><indexterm>reference hierarchies<indexterm>tutorial</indexterm></indexterm>
</keywords>
</metadata></prolog>
<taskbody>
<prereq>This tutorial builds on the hierarchies created in <xref href="tuttaskmap.dita"></xref> and <xref
href="tutconmap.dita"></xref>. You should complete those tutorials before
starting this one.</prereq>
<result>At the end of this tutorial, you will know:<ul>
<li>How to identify reference topics given a scenario and tasks</li>
<li>How to organize the topics into a hierarchy</li>
</ul></result>
</taskbody>
</task>
<concept id="refhier" conref="../concepts/refhier.dita#refhier">
<title>Reference hierarchies</title>
<conbody></conbody>
</concept>
<task id="identref">
<title>Identify reference topics</title>
<shortdesc>Starting from the original scenario, identify the elements of the
product or subject that should be described in more detail.</shortdesc>
<taskbody>
<steps>
<step><cmd>Look through the content of the tasks, and also look through the
original scenario, to identify places where you should provide additional
details for users that require it.</cmd><info>You are likely to come up with
a longer list than we will use here. For the sake of this tutorial, list only
the XML elements that are mentioned in the scenario.</info></step>
</steps>
<result>A more complete list of reference topics would have to include all
the elements allowed as part of a map, not just the ones mentioned in the
scenario. In addition, it would include other categories of reference information,
such as command-line interfaces for output generation. For this tutorial,
however, you only need to identify the following topics:<ul>
<li>map element</li>
<li>topicref element</li>
<li>topicmeta element</li>
<li>linktext element</li>
<li>shortdesc element</li>
</ul></result>
</taskbody>
<task id="startmap">
<title>Starting the reference map</title>
<shortdesc>You can use a map to organize the reference topics into a hierarchy.</shortdesc>
<taskbody>
<steps>
<step><cmd>Create a map named tut-maps\reference.ditamap .</cmd></step>
<step><cmd>On the &lt;map> element, set the following attributes:</cmd>
<substeps>
<substep><cmd>Set <i>title</i> to <userinput>Reference map</userinput></cmd>
</substep>
<substep><cmd>Set <i>audience</i> to <userinput>infoarch</userinput>, as you
did for the task and concept maps in the previous tutorials.</cmd></substep>
</substeps>
</step>
</steps>
</taskbody>
</task>
<task id="addcons">
<title>Creating the reference hierarchy</title>
<shortdesc>Now that you've created the map file, you can use it to organize
your reference topics.</shortdesc>
<taskbody>
<context><p>Reference information can be organized into categories as an aid
to retrieval, but should generally be organized alphabetically within a category.
In this case, we're only going to list the map elements that appeared in the
first map tutorial, so categories are unnecessary, aside from a high-level
container for all of them. To create the container, you can use a &lt;topichead>
element, which provides an organizing heading for a navigation pane or table
of contents without requiring an actual topic to point to.</p><p>In a real
reference hierarchy, it would probably be a good idea to create actual reference
topics to act as containers, even if their content is minimal. This lets the
map processing turn them into summaries of the category, pulling in the titles
and short descriptions from each of the child topics. But for this tutorial,
take the opportunity to try out the &lt;topichead> element instead.</p></context>
<steps>
<step><cmd>Add the reference topics, alphabetically under their organizing
header:</cmd><stepxmp><codeblock>&lt;topichead navtitle="Map elements">
  &lt;topicref navtitle="linktext element"/>
  &lt;topicref navtitle="map element"/>
  &lt;topicref navtitle="shortdesc element"/>
  &lt;topicref navtitle="topicmeta element"/>
  &lt;topicref navtitle="topicref element"/>
&lt;/topichead></codeblock></stepxmp><info><p>Our source scenario (the first
map tutorial) also described a number of attributes: these might be documented
as standalone reference topics, as nested reference topics within the same
file as the elements they belong to, or even just as sections within each
element topic. For the sake of this tutorial, we'll assume they're being documented
within each element (either as nested reference topics or as sections), and
don't need to be addressed directly by this map.</p></info></step>
</steps>
</taskbody>
</task>
<task id="addcontent">
<title>Adding content</title>
<shortdesc>Now that you've mapped the hierarchy, you can add references to
the content it describes.</shortdesc>
<taskbody>
<context>For this tutorial, we'll use pre-existing content.</context>
<steps>
<step><cmd>Within the tutmaps directory, create a ref subdirectory.</cmd>
</step>
<step><cmd>Copy the reference topics from samples/typedmaps/source/ref into
the tutmaps/ref/ directory.</cmd></step>
<step><cmd>Add <i>href</i> attributes to your map that point to the content.</cmd>
<stepxmp>For example, &lt;topicref navtitle="topicref"/> becomes &lt;topicref
href="ref/topicref.dita" navtitle="topicref"/>.</stepxmp></step>
<step><cmd>Open a few of the reference files, and confirm that they do not
contain related links.</cmd><tutorialinfo>There is another tutorial for creating
reference content. For this tutorial, we're only interested in how the map
manages the related links.</tutorialinfo></step>
</steps>
<result>Your map should now look something like this:<codeblock>&lt;map title="Reference map">
  &lt;topichead navtitle="Map elements">
    &lt;topicref navtitle="linktext element" href="ref/linktext.dita"/>
    &lt;topicref navtitle="map element" href="ref/map.dita"/>
    &lt;topicref navtitle="shortdesc element" href="ref/shortdesc.dita"/>
    &lt;topicref navtitle="topicmeta element" href="ref/topicmeta.dita"/>
    &lt;topicref navtitle="topicref element" href="ref/topicref.dita"/>
  &lt;/topichead>
&lt;/map></codeblock></result>
</taskbody>
</task>
<task id="genstuff">
<title>Generating output</title>
<shortdesc>Generate the output for the map.</shortdesc>
<taskbody>
<context>Use the same procedure as for previous maps, and generate either
HTMLHelp or an Eclipse plugin.</context>
</taskbody>
</task>
<task id="reviewresults">
<title>Reviewing results</title>
<shortdesc>Review the results of the map.</shortdesc>
<taskbody>
<steps>
<step><cmd>Check that no links have been added.</cmd><info>Since the map defines
no parent or child relationships between topics, and no collection types,
the map serves only to define which topics are processed during the map build.</info>
</step>
<step><cmd>Compare the results with the equivalent set of reference topics
in the DITA information set. You should see some additional links in the DITA
information set, because it covers more content and relationshps. But you
should be able to see some similarities as well.</cmd></step>
</steps>
</taskbody>
</task>
<concept id="summary">
<title>Summary</title>
<shortdesc>You have created a reference hierarchy, starting from a scenario
and a set of tasks and identifying the product or subject features that need
more detailed coverage. You have used the topichead element to organize the
navigation output.</shortdesc>
<conbody>
<p>Compare your map to the sample map in samples\typedmaps\source, and compare
your output to the sample output in samples\typedmaps\output</p>
<p>You are now ready to proceed to the next tutorial, where you'll learn how
to create a relationship table that defines how concepts and reference information
support the tasks.</p>
</conbody>
</concept>
</task>
</dita>
