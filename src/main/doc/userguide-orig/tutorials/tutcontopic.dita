<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE dita PUBLIC "-//IBM//DTD DITA Composite//EN"
 "..\dtd\ditabase.dtd">
<dita>
<task id="tutcontopic.dita" xml:lang="en-us">
<title>Tutorial: Creating a concept topic</title>
<shortdesc>Learn how to create a concept topic.</shortdesc>
<prolog><metadata>
<keywords><indexterm>concepts<indexterm>tutorial</indexterm></indexterm></keywords>
</metadata></prolog>
<taskbody>
<context><p>Concepts aren't as structured as tasks or reference topics. For
this tutorial, you'll create a simple concept that describes maps.</p></context>
<result>After completing this tutorial, you will know:<ul>
<li>How to add content</li>
<li>How to add sections</li>
<li>How to add examples</li>
</ul></result>
</taskbody>
<concept id="contopics" conref="../concepts/contopic.dita#contopic">
<title>Concept topics</title>
<conbody></conbody>
</concept>
<task id="prepdir" conref="tuttopic.dita#prepdir">
<title>Preparing a project directory</title>
<taskbody></taskbody>
</task>
<task id="start">
<title>Starting the concept</title>
<shortdesc>Concepts are created using the concept DTD. Concepts contain the
same kinds of content as a topic. The only restriction is that the only content
allowed after a section is other sections or examples.</shortdesc>
<taskbody>
<context>Create your content in the same directory as your maps, or a subdirectory
of them. For this tutorial, create a concepts subdirectory:</context>
<steps>
<step><cmd>Start your editor, and open a new concept.</cmd></step>
<step><cmd>Change the <i>title</i> to <userinput>Maps</userinput>.</cmd></step>
<step><cmd>Change the <i>id</i> to <userinput>maps</userinput>.</cmd></step>
<step><cmd>Save the concept as <filepath>tut-content/concepts/maps.dita</filepath>.</cmd>
</step>
<step><cmd>Delete all the content of the body, and leave just an empty &lt;conbody>
element.</cmd></step>
<step><cmd>Insert a short description after the title: <userinput>Maps let
you organize topics that you want to build into an output Web or PDF. You
can also generate navigation files based on the map structure, and generate
links that get added to the topics.</userinput></cmd><info><p>As introduced
earlier, the short description needs to make sense on its own as a preview
of the concept, as well as serving as a short introduction before getting
into the rest of the concept.</p></info></step>
</steps>
</taskbody>
</task>
<task id="addcon">
<title>Adding content</title>
<shortdesc>Concepts can contain paragraphs and other block-level content directly
in the body.</shortdesc>
<taskbody>
<steps>
<step><cmd>Add three paragraphs to the conbody.</cmd><stepxmp><p><codeph>&lt;p>A
map file references one or more DITA topic files using &amp;lt;topicref&amp;gt;
elements. The &amp;lt;topicref&amp;gt; elements can be nested to reflect the
desired hierarchical relationships of the topics. Map files need to have a
file extension of .ditamap to be processed properly.&lt;/p></codeph></p><p><codeph>&lt;p>Maps
should only be used to process topics in the same directory as the map, or
in subdirectories of the map's directory. While you can still reference topics
outside of that scope, you should use the &lt;i>scope&lt;/i> attribute (set
to peer or external) to let processes know that the targets are out of reach,
and should not be processed or copied to the output directory.&lt;/p></codeph> </p><p><codeph>&lt;p>The
relationships defined in a map can be used to create a Table of Contents (TOC),
aggregate topics into a PDF document, or create links between topics in output.
Maps provide a way to express these relationships in a single common format
that can be used for different outputs. You can identify differences (for
example, a topic could be included in the online Table of Contents but not
in the aggregated PDF) using a common set of attributes.&lt;/p></codeph></p></stepxmp>
</step>
</steps>
</taskbody>
</task>
<task id="addsect">
<title>Adding a section</title>
<shortdesc>You can add sections after any content in the body. You can't mix
sections and block-level content.</shortdesc>
<taskbody>
<context>Use sections in a concept when there is information that requires
its own heading that is too small to split off into its own concept.</context>
<steps>
<step><cmd>Add a section after the last paragraph.</cmd><stepxmp><codeblock>&lt;section>&lt;title>Linking based on maps&lt;/title>
&lt;p>The following are some examples
of the relationships that can be described in a map: 
&lt;ul>
&lt;li>Hierarchical (Parent/Child). Nested topics create a hierarchical relationship.
The topic that does the nesting is the parent. The topics that are nested
are the children.&lt;/li>
&lt;li>Sequence. Child topics can be labeled as having a sequence relationship
meaning that they are referenced in a definite sequence.&lt;/li>
&lt;li>Family. Child topics can be labeled as having a family relationship meaning
that they all refer to each other. &lt;/li>
&lt;li>Friend. Topics can be organized in non-hierarchical ways using relationship
tables. &lt;/li>
&lt;/ul> 
&lt;/p>
&lt;/section></codeblock></stepxmp></step>
</steps>
</taskbody>
</task>
<task id="addxmp">
<title>Adding an example</title>
<shortdesc>As well as block-level content and sections, you can add examples.
Like sections, examples can only be added after any block-level content. You
can mix sections and examples as needed.</shortdesc>
<taskbody>
<steps>
<step><cmd>Add an example after the section.</cmd><stepxmp><codeblock>&lt;example>
  &lt;title>Example: A simple map&lt;/title>
  &lt;codeblock>
    &amp;lt;map title="Simple map">
       &amp;lt;topicref href="simple.dita">
         &amp;lt;topicref href="child1.dita"/>
         &amp;lt;topicref href="child2.dita">
             &amp;lt;topicref href="child2a.dita"/>
             &amp;lt;topicref href="child2b.dita"/>
         &amp;lt;/topicref>
          &amp;lt;topicref href="child3.dita"/>
       &amp;lt;/topicref>
     &amp;lt;/map>  
  &lt;/codeblock>
&lt;/example></codeblock><note>When you enter the <q>&lt;</q> character; the
editor converts it to the &amp;lt; symbol automatically. You should type the
&lt; character; do not type the &amp;lt; symbol.</note></stepxmp></step>
</steps>
</taskbody>
</task>
<task id="addlink">
<title>Adding links</title>
<shortdesc>After the body, you can add related links.</shortdesc>
<taskbody>
<context>Wherever possible, you should manage your links from maps, so that
the topic has few direct dependencies on other topics, and can easily be reused
in other collections. However, if your topic is only being used in one collection,
the links are unlikely to change in different contexts, or the links are to
topics in the same file, you can add the links directly to the topic. For
this tutorial, add two related links:</context>
<steps>
<step><cmd>After the &lt;conbody>, add a link to a task and a link to a reference
topic:</cmd><stepxmp><codeblock>&lt;related-links>
  &lt;link href="../tasks/create.dita"/>
  &lt;link href="../ref/map.dita"/>
&lt;/related-links></codeblock></stepxmp></step>
<step><cmd>Copy create.dita from the typed map sample into a tasks directory,
at the same level as the concepts directory that contains this concept.</cmd>
<info>This lets output processes access the target, so that it can retrieve
the title and short description from the target, and also determine the type
of the target so that the link can be sorted appropriately on output.</info>
</step>
<step><cmd>Copy map.dita into a ref directory at the same level as the tasks
and concepts subdirectories.</cmd></step>
</steps>
</taskbody>
</task>
<task id="preview">
<title>Previewing results</title>
<shortdesc>Generate HTML and PDF for the concept, and see what the result
looks like.</shortdesc>
<taskbody>
<context>The links are present in both HTML and PDF. In the PDF output, links
with roles like parent, child, next and previous are filtered out, since they
are likely to be pointing to topics on the same or adjacent pages. When the
links have no role, they are added to both outputs.</context>
</taskbody>
</task>
<concept id="sum">
<title>Summary</title>
<shortdesc>You have created a concept, including content in the body, a section,
and an example.</shortdesc>
<conbody></conbody>
</concept>
</task>
</dita>
