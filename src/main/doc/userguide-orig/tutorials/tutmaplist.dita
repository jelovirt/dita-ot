<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE dita PUBLIC "-//IBM//DTD DITA Composite//EN"
 "..\dtd\ditabase.dtd">
<dita>
<task id="tutrelmaplist" xml:lang="en-us">
<title>Tutorial: Creating a maplist</title>
<shortdesc>Learn how to create a map list, which you can use to apply multiple
maps at the same time. (You can also use a DITA map to combine other maps).</shortdesc>
<prolog><metadata>
<keywords><indexterm>maplist tutorial</indexterm></keywords>
</metadata></prolog>
<taskbody>
<prereq><p>DITA maps can reference other DITA maps by using the topicref element.
You use a topicref in a "main map" that references your maps instead of creating
a maplist. To create this; see <xref href="tutmainmap.dita"></xref>.</p><p>This
tutorial builds on the maps created in previous tutorials: <xref href="tuttaskmap.dita"></xref> ,<xref
href="tutconmap.dita"></xref>, <xref href="tutrefmap.dita"></xref>, and <xref
href="tutrelmap.dita"></xref>. You should complete those tutorials before
starting this one.</p></prereq>
<result>After completing this tutorial, you will know:<ul>
<li>How to create a new maplist</li>
<li>How to identify maps for navigation output</li>
<li>How to identify maps for link management</li>
<li>How to process maplists</li>
</ul></result>
</taskbody>
<task id="createlist">
<title>Creating the list</title>
<shortdesc>Create and process a list of maps using the maplist editor.</shortdesc>
<taskbody>
<steps>
<step><cmd>From Windows Explorer, in your directory holding the maps, right-click
and select <menucascade><uicontrol>New</uicontrol><uicontrol>DITA Map List</uicontrol>
</menucascade>.</cmd></step>
<step><cmd>Give the file the name maptopics.maplist</cmd></step>
<step><cmd>Double-click on the file to open it.</cmd><info>The editor is divided
into two sections: the maps you want to create navigation from, and the maps
you want to create links from.</info></step>
<step rev="rel382"><cmd>To the Navigation section, add the concept, task,
and reference maps.</cmd>
<substeps>
<substep><cmd>Click <uicontrol>Add</uicontrol> to open the <wintitle>Add DITAMap</wintitle> window.</cmd>
</substep>
<substep><cmd>Browse to the map files you created in the previous tutorials.</cmd>
<info>Tuck this bit of lore away for later use: your maps can be in different
directories, and in different relative directories.</info></substep>
<substep><cmd>Select the maps you want to add.</cmd></substep>
<substep><cmd>Click <uicontrol>Open</uicontrol> then <uicontrol>OK</uicontrol>.</cmd>
</substep>
</substeps>
<stepresult>The maps are added to the Navigation list.</stepresult></step>
<step><cmd>Reorder the maps if necessary, to put them in the order of: concepts,
tasks, and reference.</cmd><info>This won't matter for Eclipse output, which
will produce a separate navigation file for each input map file, but it would
make a difference if we produced a PDF or HTMLHelp from this maplist.</info>
</step>
<step><cmd>To the Linking section, add the same three maps again, plus the
relationship table map, using the same steps.</cmd><info>The order does not
matter here.</info></step>
<step><cmd>Save your work and close the editor.</cmd></step>
</steps>
</taskbody>
</task>
<task id="proclist">
<title>Processing the list</title>
<shortdesc>Process the map list to create multiple navigation files and apply
multiple sets of related links at once.</shortdesc>
<taskbody>
<steps>
<step><cmd>Open Windows Explorer, and browse to the directory that contains
the map list.</cmd></step>
<step><cmd>From the pop-up menu of the map list, click <uicontrol>Work with
ID Workbench</uicontrol>.</cmd></step>
<step><cmd>Generate HTML plus the type of navigation you want (HTMLHelp or
Eclipse).</cmd></step>
</steps>
</taskbody>
</task>
<task id="review">
<title>Review the navigation and linking output</title>
<shortdesc>Make sure the navigation for each navigation file was generated,
and also that linking for all maps was generated.</shortdesc>
<taskbody>
<context></context>
<result><p>In HTMLHelp, the three navigations will be concatenated. In Eclipse,
three separate navigation files will be created, and you will need to add
all three to plugin.xml. Because they are generated as separate files, they
can be integrated into product-level task, concept, and reference hierarchies.</p><p>The
links include parent, child, next, and previous links from the three hierarchical
maps, and non-hierarchical links from the rows and group in the relationship
map.</p></result>
</taskbody>
</task>
<concept id="maplistreldir" xml:lang="en-us">
<title>Map lists can have relative directories</title>
<conbody>
<p rev="rel382"><indexterm>Maplists, relative paths</indexterm><indexterm>relative
paths, maplists</indexterm>Maplists can contain paths. The paths can be within
the scope of the current directory, or they can be relative paths to ancestor
or peer directories. Full paths are not allowed. The maplist editor creates
DITA map entries using relative paths. For example, these are valid entries:<codeblock>a.ditamap
concepts/b.ditamap
../plugin.ibm.com/c.ditamap</codeblock></p>
<p rev="rel382">Any valid relative path is acceptable; there is no limit on
how many subdirectories you can follow down. The only limit on how many you
can go up is the number of ancestor directories available on the file system.</p>
<p rev="rel382">If a DITA search path file is specified, the maplist must
be included within one of the specified directories, OR it should be a descendant
of one of the specified directories. That is, it should refer to one of the
following:<ul>
<li>The directory that contains the maplist itself (so the maplist is in the
base project directory)</li>
<li>An ancestor of the maplist (so the maplist is above the base project directory).
For example, given the maplist file: <codeblock>c:\projects\proj1\myplugin\this.maplist</codeblock> and
these search path entries: <codeblock>c:\projects\proj1\ 
z:\rchlan\projects\proj1\</codeblock><p>The project directory (<codeph>proj1</codeph>)
line up. The maplist is located deeper within the project.</p></li>
<li>A subdirectory of the maplist. For example, given the following maplist
file: <codeblock>c:\projects\this.maplist</codeblock>and these same search
path entries: <codeblock>c:\projects\proj1\ 
z:\rchlan\projects\proj1\</codeblock><p>The project directory (<codeph>projects</codeph>)
line up again. But this time the maplist is further up the directory chain.
This sample would likely reference maps within proj1, as well as maps within
other projects.</p></li>
</ul></p>
</conbody>
</concept>
<concept id="summary">
<title>Summary</title>
<shortdesc>You have created a list of maps that you can process in one step.
You have identified which maps will be used to generate navigation and which
will be used to generate links.</shortdesc>
<conbody>
<p>Compare your maplist to the sample one in samples/typedmaps/source, and
compare your output to the sample output in samples/typedmaps/output .</p>
<p>You are now ready to proceed to the next tutorial, where you'll learn how
to assemble the different topic types into a hierarchy suitable for printing
as a minimalist manual.</p>
</conbody>
</concept>
</task>
</dita>
