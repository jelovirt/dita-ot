<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE task PUBLIC "-//IBM//DTD DITA Task//EN"
 "..\dtd\task.dtd">
<task id="createrel" xml:lang="en-us">
<title>Creating relationship tables</title>
<shortdesc>Define relationship tables to manage non-hierarchical relationships.</shortdesc>
<prolog><metadata>
<keywords><indexterm>relationship tables<indexterm>creating</indexterm></indexterm>
</keywords>
</metadata></prolog>
<taskbody>
<context>The contents of the relationship table are omitted from navigation
and print output by default. The relationship table is primarily intended
to support linking. You can fine-tune linking behavior with the <i>linking</i> attribute,
which can be set for the &lt;reltable> as a whole, for columns, for cells,
or for topic references in cells. Overrides work the same in relationship
tables as with hierarchies: that is, elements inherit default values from
ancestors, but can override them and set new defaults for their own descendants.</context>
<steps>
<step><cmd>Add the &lt;reltable> element to the map.</cmd><info>You can only
add &lt;reltable>s as direct children of the &lt;map> element: you cannot
nest them or put them in groups.</info></step>
<step><cmd>Define a header row for the &lt;reltable>.</cmd></step>
<step><cmd>Add column specifications (&lt;relcolspec> elements) to the header
row.</cmd><info>Each column specification can hold attributes and metadata
that set the default for the entire column.</info><stepxmp>For example, &lt;relcolspec
type="concept"/> means that all &lt;topicref>s in the column will be assumed
to be concepts by default, and will produce validation errors for &lt;topicref>s
that are not.</stepxmp><info>You can override the column defaults at the cell
level or at the &lt;topicref> level within the cell.</info></step>
<step><cmd>Add relationship rows (&lt;relrow> elements) after the header row.</cmd>
<info>Each relationship row defines a relationship among the cells in the
row.</info></step>
<step><cmd>Add cells (&lt;relcell> elements) to each row.</cmd><info>Cell
order determines column membership: the first cell is in the first column,
and so on. If the number of cells exceeds the number of column specifications,
the extra cells simply belong to extra (unspecified) columns.</info><info>You
can override column defaults with the equivalent attributes on the cell. You
can also set collection types on the &lt;relcell> element to determine the
relationships between sibling topic references in the cell.</info></step>
<step><cmd>Add topic references each cell.</cmd><info>The topics in a cell
will link to topics in other cells, but not to topics in the same cell, unless
they are defined as a sequence or family by the cell's collection-type attribute.</info>
</step>
</steps>
<result>When you produce output, the &lt;topicref>s will be validated against
the metadata you set for the column. Links will be generated for each row,
by default between all &lt;topicref>s in the same row but not in the same
cell.</result>
<example><title>Example</title><p>In this table, we see a task related to
the concept that provides background information and the reference topic that
provides details. In output, the three would link together.<table>
<tgroup cols="3"><colspec colname="col1"/><colspec colname="col2"/><colspec
colname="col3"/>
<tbody>
<row>
<entry>concept</entry>
<entry>task</entry>
<entry>reference</entry>
</row>
<row>
<entry>Blocks</entry>
<entry>Adding blocks</entry>
<entry>Block properties</entry>
</row>
</tbody>
</tgroup>
</table></p><p>The markup for the table might look like this:<codeblock>&lt;reltable>
  &lt;relheader>
    &lt;relcolspec type="concept"/>
    &lt;relcolspec type="task"/>
    &lt;relcolspec type="reference"/>
  &lt;/relheader>
  &lt;relrow>
    &lt;relcell>
      &lt;topicref href="concepts/blocks.dita"/>
    &lt;/relcell>
    &lt;relcell>
      &lt;topicref href="tasks/addblocks.dita"/>
    &lt;/relcell>
    &lt;relcell>
      &lt;topicref href="ref/blockprops.dita"/>
    &lt;/relcell>
  &lt;/relrow>
&lt;/reltable></codeblock></p></example>
</taskbody>
</task>
