<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE task PUBLIC "-//IBM//DTD DITA Task//EN"
 "..\dtd\task.dtd">
<task id="reusemap" xml:lang="en-us">
<title>Reusing maps</title>
<shortdesc>You can reuse maps for navigation dynamically, assembling Eclipse
tables of contents from whatever components are installed. You can also reuse
maps in IBMIDDoc files using xmlobj, or reuse parts of maps using conref.</shortdesc>
<prolog><metadata>
<keywords><indexterm>maps<indexterm>reuse of</indexterm><indexterm>Eclipse
references in</indexterm></indexterm><indexterm>navref element</indexterm>
<indexterm>anchor element</indexterm><indexterm>Eclipse navigation reuse</indexterm>
</keywords>
</metadata></prolog>
<taskbody>
<context><p>DITA maps let you create the same reuse relationships that Eclipse
navigation files do, and they are resolved in the same way. The reuse does
not create run-time linking based on installed components, only run-time navigation.
This technique only works for Eclipse output, since other output formats do
not support runtime creation of navigation.</p><p>If you want to reuse map
content for other outputs, or you want the reuse to include linking relationships,
you can use DITA techniques for the reuse of parts of maps.</p><p>To create
reuse relationships that will be resolved dynamically in Eclipse navigation:</p></context>
<steps>
<step><cmd>At the point in the hierarchy that you want to include another
map's navigation, insert a &lt;navref> element.</cmd><info>The &lt;navref>
is equivalent to the &lt;link> element in the Eclipse table of contents format.</info>
</step>
<step><cmd>On the &lt;navref>, add a <i>mapref</i> attribute that points to
the map you want to reuse, typically using a relative path.</cmd><stepxmp>For
example:<codeblock>&lt;navref mapref="../my.other.plugin/anothertoc.ditamap"/></codeblock></stepxmp>
<info>The <i>mapref</i> attribute is equivalent to the <i>toc</i> attribute
in Eclipse.</info></step>
<step importance="optional"><cmd>Add &lt;anchor> elements with unique ID attributes
wherever you want to enable other maps to insert themselves.</cmd><info>The
&lt;anchor> elements let components that are shipped after yours integrate
themselves into your navigation.</info><info>The &lt;anchor> element is the
same in DITA and Eclipse.</info></step>
<step importance="optional"><cmd>If your component needs to integrate itself
into an already-shipped navigation, add an <i>anchorref</i> attribute to your
&lt;map> element that points to the target &lt;anchor>.</cmd><stepxmp>For
example:<codeblock>&lt;map anchorref="../that.other.plugin/maintoc.ditamap#anchorID"></codeblock></stepxmp>
<info>The &lt;map> element and <i>anchorref</i> attribute are equivalent to
the &lt;toc> element and <i>link_to</i> attribute in Eclipse.</info></step>
</steps>
<result>The references will be processed into .xml references on output (for
example, maintoc.ditamap becomes maintoc.xml). At runtime, the user will see
the referenced navigation included automatically at the point of the reference,
if the target is available. Otherwise the reference is simply ignored, on
the assumption that the target is not installed.</result>
</taskbody>
</task>
