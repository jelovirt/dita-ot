<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE task PUBLIC "-//IBM//DTD DITA Task//EN"
 "..\dtd\task.dtd">
<task id="cretaskmap" xml:lang="en-us">
<title>Creating task hierarchies</title>
<shortdesc>Use task analysis to determine what tasks you need to document
and in what order, then organize them into major and minor tasks and identify
sequences and prerequisites.</shortdesc>
<prolog><metadata>
<keywords><indexterm>hierarchies<indexterm>creating task</indexterm></indexterm>
<indexterm>task hierarchies<indexterm>creating</indexterm></indexterm><indexterm>creating
task hierarchies</indexterm></keywords>
</metadata></prolog>
<taskbody>
<context>With luck, you will be able to use an existing task analysis created
during the product or interface design stage. Otherwise, gather information
on user tasks from whatever sources are available. This set of steps represents
a useful order for developing task information, since each piece feeds into
the next. However, it is not the only possible order.</context>
<steps>
<step><cmd>Identify and document scenarios.</cmd><info><p>Describe realistic
situations in which a user would use a set of your product features. Ideally,
your scenarios should cover all of your product's main features, and may also
cover some more obscure ones that need the additional documentation.</p><p>If
scenarios have already been described during the product design process, you
may be able to use them. Otherwise identify scenarios through user interviews,
or (less usefully) through interviews with people who know the users.</p></info>
</step>
<step importance="optional"><cmd>Develop tutorials and samples based on the
scenarios.</cmd><info><p>Not every scenario requires a tutorial or a sample.
However, working through scenarios with tutorials and samples provides a solid
base for later task and example development.</p></info></step>
<step><cmd>Create a DITA map file.</cmd></step>
<step><cmd>In the map, create a list of the tasks that a user performs in
each scenario, in sequence.</cmd><info><p>Use a &lt;topicref> element with
a <i>navtitle</i> attribute for each task.</p></info></step>
<step><cmd>Organize the task list into an overall task flow for the product.</cmd>
<info><p>Nest the &lt;topicref> elements to create high-level tasks and low-level
tasks.</p></info></step>
<step><cmd>Within the task flow, identify which sets of tasks are sequential,
which are choices, and which are collected together based on some other logic.</cmd>
<info><p>Set the <i>collection-type</i> attribute on a major task to identify
how its component tasks are related.</p></info>
<choicetable>
<chrow><choption>sequence</choption><chdesc>The tasks should be performed
in sequence.</chdesc></chrow>
<chrow><choption>choice</choption><chdesc>Only one of the tasks should be
performed; they represent different implementations of the major task.</chdesc>
</chrow>
<chrow><choption>family</choption><chdesc>The tasks are closely related, and
should be understood relative to each other.</chdesc></chrow>
<chrow><choption>unordered</choption><chdesc>The default: the tasks are not
closely related, but are grouped together logically to aid retrieval.</chdesc>
</chrow>
</choicetable>
</step>
<step><cmd>Within the sequences, identify which tasks are required parts of
the sequence.</cmd><info>Set importance="required" to identify required tasks
in the sequence.</info></step>
<step><cmd>Add an <i>href</i> attribute to each &lt;topicref> to point to
the equivalent task topic.</cmd><info>You can use the map as a to-do list
to develop new tasks, and as a way to validate that existing tasks have a
place in the task flow and are not misnamed or inappropriate.</info></step>
</steps>
<result>You now have a map that can be used to generate task navigation for
your information set, and add task-related links among your topics. Parent
tasks and child tasks will link to each other, tasks in a sequence will link
to their next and previous siblings and to any preceding sibling with importance="required",
and tasks in a family will link to each other. On output, the links will be
sorted by <i>importance</i>, <i>type</i>, and <i>role</i>.</result>
</taskbody>
</task>
