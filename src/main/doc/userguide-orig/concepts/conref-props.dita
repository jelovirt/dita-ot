<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE concept PUBLIC "-//IBM//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<concept id="conref-props" xml:lang="en-us">
<title>How conref and property settings interact</title>
<shortdesc>Just when things are starting to get clear on conref; and on property
settings; you now want to mix them together. This topic explains how they
interact.</shortdesc>
<prolog><metadata>
<keywords><indexterm>conref and property settings, interacting</indexterm>
<indexterm>and property settings interact, How conref</indexterm><indexterm>property
settings and conref interacting</indexterm><indexterm>interact, conref and
property settings</indexterm><indexterm>conditional processing and conref
attribute</indexterm></keywords>
</metadata></prolog>
<conbody>
<ul>
<li>During processing for properties, elements with properties that are excluded
are removed from the content. This is one of the first steps in the transform
process. </li>
<li>During conref processing, for elements with a conref; that element's content
is ignored. Only the attributes are processed.</li>
</ul>
<p>So, if you have a conref that is pointing to content that is excluded,
you'll get a message that the excluded content cannot be found.</p>
<section><title>The case of the disappearing conref target</title><p>For example,
here is a conref that is pulling in the content from file bats.dita, list
item <codeph>pet</codeph><codeblock>&lt;li conref="bats.dita#bats/pet" /></codeblock></p><p>If
in the bats.dita file, the list item also has a property setting ('holding'
in this case), that setting cannot be set to 'exclude':<codeblock>&lt;li>Bats like to fly&lt;/li>
&lt;li id="pet" otherprops="holding">Bats like to be petted.&lt;/li>
&lt;li>Bats like to eat&lt;/li>
</codeblock></p><p>If it is set to 'exclude', the LI with an ID of "pet" is
excluded during processing; it is removed from the content. The previous source
now looks like this:<codeblock>&lt;li>Bats like to fly&lt;/li>
&lt;li>Bats like to eat&lt;/li></codeblock></p><p>When the conref is applied,
because that "pet" list item is gone, the conref no longer has a target, and
an error occurs.</p></section>
<section><title>Mutually exclusive targets do resolve</title><p>You can have
mutually exclusive targets for a conref. For example, here two LIs have the
same ID, and have two different property settings:<codeblock>&lt;li>Bats like to fly&lt;/li>
&lt;li id="pet" otherprops="holding">Bats like to be petted.&lt;/li>
&lt;li id="pet" otherprops="grabbing">Bats hate to be messed up.&lt;/li>
&lt;li>Bats like to eat&lt;/li></codeblock></p><p>Now, if 'holding' were set
to exclude and 'grabbing' were set to include, the example would look like
this:<codeblock>&lt;li>Bats like to fly&lt;/li>
&lt;li id="pet" otherprops="grabbing">Bats hate to be messed up.&lt;/li>
&lt;li>Bats like to eat&lt;/li></codeblock></p><p>And now a conref to the
'pet' LI would work.</p></section>
</conbody>
</concept>
