<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE concept PUBLIC "-//IBM//DTD DITA Concept//EN"
 "..\dtd\concept.dtd">
<concept id="taskhier" xml:lang="en-us">
<title>Task hierarchies</title>
<shortdesc>Task hierarchies organize the tasks for a product or component
into a task flow, based on a task analysis for the subject area.</shortdesc>
<prolog><metadata>
<keywords><indexterm>task hierarchies</indexterm><indexterm>hierarchies<indexterm>tasks</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>Tasks answer the question "How do I...". When you create a task hierarchy,
you need to start by making sure you have a good foundation: a scenario or
sample that you can apply task analysis to. You can use scenarios to help
you identify important tasks, and also to identify the sequence in which the
tasks would be performed.</p>
<p>A well-organized task hierarchy can help users understand a product, and
understand how their high-level goals can be accomplished with specific sequences
of tasks. Group tasks logically. Keep all subtasks associated with a main
task together. If your subject has a chronological sequence that is normally
followed, the task list should reflect that sequence: list configure before
start, find before replace. You can also provide additional groupings of tasks
by object, for example by keeping all tasks associated with business objects
together. (This is not necessarily the same thing as grouping all tasks associated
with a particular tool or feature. That would be tool orientation, not task
orientation.)</p>
<p>In addition to tasks, the task hierarchy can also include links to tutorials
and scenarios, both in a getting started section at the beginning of the task
flow, and also aligned with whatever high-level tasks a particular tutorial
or scenario supports.</p>
</conbody>
</concept>
