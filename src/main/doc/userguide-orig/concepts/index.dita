<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE concept PUBLIC "-//IBM//DTD DITA Concept//EN"
 "..\dtd\concept.dtd">
<concept id="index" xml:lang="en-us">
<title>Indexing</title>
<shortdesc>You can create indexes both for online and for print by adding
index entries to topics or to maps.</shortdesc>
<prolog><metadata>
<keywords><indexterm>indexing</indexterm><indexterm>creating index entries</indexterm>
<indexterm>primary index entries</indexterm><indexterm>secondary index entries</indexterm>
<indexterm>tertiary index entries</indexterm><indexterm>maps<indexterm>indexing</indexterm></indexterm>
<indexterm>topics<indexterm>indexing</indexterm></indexterm></keywords>
</metadata></prolog>
<conbody>
<p>Add entries using the &lt;indexterm> element. Nest entries to create second-level
and third-level index entries. For example, here's a primary entry of <q>testcase
tasks</q> and a secondary entry of <q>sequential</q>: <codeblock>&lt;indexterm>testcase tasks
  &lt;indexterm>sequential&lt;/indexterm>
&lt;/indexterm></codeblock> </p>
<p>This would result on output as the following:<codeblock>testcase tasks
  sequential 102</codeblock></p>
<p>The page number (in the PDF), or the link (for online help), is applied
to the most deeply nested index term. When containers are repeated, they are
combined on output. For example, if another topic has: <codeblock>&lt;indexterm>testcase tasks
 &lt;indexterm>asynchronous&lt;/indexterm>
&lt;/indexterm></codeblock></p>
<p>Then the combined output when both topics are included would be:<codeblock>testcase tasks
  asynchronous 130
  sequential 102</codeblock></p>
<p>You can place index entries in the following locations:<dl><dlentry>
<dt>In a map</dt>
<dd>In a &lt;topicref>'s &lt;topicmeta> element, you can add a &lt;keywords>
element that contains index entries. Adding index entries to the map lets
you maintain separate index entries for topics for different contexts.<!--means that you can continue indexing even after topics have shipped to translation, and --><p
>For example, this shows two entries for a topic:<codeblock>&lt;topicref href="batcaring.dita" navtitle="Caring for your fruit bat">
 &lt;topicmeta>
  &lt;keywords>
   &lt;indexterm>bats
    &lt;indexterm>caring&lt;/indexterm>
   &lt;/indexterm>
   &lt;indexterm>caring for bats&lt;/indexterm>
  &lt;/keywords>
 &lt;/topicmeta>
&lt;/topicref></codeblock></p><p>This would result on output as the following:<codeblock>bats
  caring 102
caring for bats</codeblock></p></dd>
</dlentry><dlentry>
<dt>In a topic's prolog</dt>
<dd>In a topic's &lt;prolog> element, you can add a &lt;keywords> element
that contains index entries. Adding index entries to the prolog means that
the same terms will be added to the index and to the HTML keywords metadata
element, which can provide synonyms for metadata-aware search engines like
the one used by Eclipse.<p>For example, this shows an index entry (bats, introduction).
It also shows a &lt;keyword> element (ACME Bat Company); which is added to
the HTML keywords metadata element, without being also added to the index
itself. The keyword here is useful for adding synonyms to help with searching;
without having those entries appear in an index.:<codeblock>&lt;topic id="bats" xml:lang="en-us">
 &lt;title>Bats&lt;/title>
 &lt;shortdesc>Learn about your new bat.&lt;/shortdesc>
 &lt;prolog>
  &lt;metadata>
   &lt;keywords>
    &lt;indexterm>bats
     &lt;indexterm>introduction&lt;/indexterm>
    &lt;/indexterm>
    &lt;keyword>ACME Bat Company&lt;/keyword>
   &lt;/keywords>
  &lt;/metadata>
 &lt;/prolog></codeblock></p><p>This would result on output as the following:<codeblock>bats
  introduction 10</codeblock></p></dd>
</dlentry><dlentry>
<dt>In a topic's content</dt>
<dd>Throughout the content of a topic, you can add index entries directly.
This makes sure that the page reference points to the place in the content
where the indexed information appears, even when the topic spans pages. For
example, this shows index terms entered into a paragraph:<codeblock>&lt;p>
&lt;indexterm>sound waves&lt;/indexterm>
&lt;indexterm>waves, sound&lt;/indexterm>Bats locate their food and other 
things by a series of high-pitched squeaks from their mouth. 
&lt;/p></codeblock><p>This would result on output as the following:<codeblock>sound waves 10
...
waves, sound 10</codeblock></p><p>Our friends in translation centers prefer
that index entries in content be placed outside of a sentence; do not place
index entries in the middle of sentences. The best practice is to include
these entries at the beginning of the element.</p></dd>
</dlentry></dl></p>
<p>The output for each topic does not show the index entries themselves; they
only show up in the index. There is a processing option to allow index entries
to appear in the topic, for review purposes.</p>
<section><title>Online indexing</title><p>When your content or map contains
index entries, an index file is created during output, with a name based on
the map or maplist name that you started processing from, plus "index", plus
the output extension (.htm or .html). For example, processing tasks.map gives
tasksindex.html, processing maptopics.maplist gives maptopicsindex.html. </p><p>For
HTMLHelp output, an HTMLHelp index file is generated and incorporated into
the compiled HTMLHelp file. For other XHTML output, you can choose to delete
the index file or incorporate it into your navigation structure.</p><p rev="rel384">For
Eclipse output, an Eclipse XML index file is created when you process the
DITA map using the /NavType:Eclipse option.</p><p>To incorporate
the generated HTML index into your table of contents, create a &lt;topicref>
that points to the expected file name and location of the generated HTML index
file, and define it as an online-only peer reference since the target won't
actually be available for processing (it is output from the processing, not
input to the process). For example:<codeblock>&lt;topicref href="mymaplistindex.html" navtitle="Index" 
          format="html" print="no"/></codeblock></p><p>Typically you should
only incorporate the generated index into your navigation if you are building
a standalone static information set or help set. Otherwise you will end up
with incomplete or competing indexes, as different components of the information
set are added with their own indexes, or removed from the information set
but not the index.</p></section>
</conbody>
</concept>
