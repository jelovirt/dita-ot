<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE concept PUBLIC "-//IBM//DTD DITA Concept//EN"
 "..\dtd\concept.dtd">
<concept id="blocks" xml:lang="en-us">
<title>Block-level elements</title>
<shortdesc>Paragraphs, lists, and tables are kinds of "block" elements. As
a class of content, they can contain other blocks, phrases, or text, though
the rules vary for each structure.</shortdesc>
<prolog><metadata>
<keywords><indexterm>block-level elements</indexterm><indexterm>domains and
block-level elements</indexterm></keywords>
</metadata></prolog>
<conbody>
<p>Some blocks can nest (lists), others can't (tables and paragraphs). Blocks
can have their own structural elements, as with tables, or contain phrases
and text directly, as with &lt;pre> and &lt;codeblock>.</p>
<p>Some block-level elements can be divided into categories based on subject
area:<dl><dlentry>
<dt>Generic</dt>
<dd>Elements like &lt;table>, &lt;ul> (list), and &lt;p> (paragraph) don't
say much about the subject of the information; they only provide structure.</dd>
</dlentry><dlentry>
<dt>Software</dt>
<dd>When you are documenting messages, you can use the more specific &lt;msgblock>
element, instead of the generic &lt;pre> (for preformatted content). </dd>
</dlentry><dlentry>
<dt>Programming</dt>
<dd>When you are documenting something to do with programming, you can use
specific markup like &lt;codeblock> (multi-line code fragments), &lt;syntaxdiagram>
(complex syntax descriptions), and &lt;parml> (descriptions of parameters). </dd>
</dlentry></dl></p>
</conbody>
</concept>
