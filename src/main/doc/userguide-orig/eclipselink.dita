<?xml version="1.0" encoding="utf-8"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!DOCTYPE concept PUBLIC "-//IBM//DTD DITA Concept//EN"
 "..\dtd\concept.dtd">
<concept id="eclipselink" rev="rel382" xml:lang="en-us">
<title>Linking between Eclipse plug-ins</title>
<shortdesc>Typically, a DITA map is in a base project directory, and references
subdirectories containing DITA topics. But, in Eclipse, you may need to reference
topics or maps that are in another plug-in. </shortdesc>
<prolog><metadata>
<keywords><indexterm>linking between Eclipse plug-ins</indexterm><indexterm>Eclipse
plug-ins, linking between</indexterm><indexterm>plug-ins, Eclipse, linking
between </indexterm></keywords>
</metadata></prolog>
<conbody>
<p>The output processing allows you to reference DITA maps and files that
are in peer directories, or in parent directories (directories located above
the current map). </p>
<section><title>In Maps</title><p>The ditamap file does not have to be in
the base project directory and could be in a sub directory of the project.</p><p><b>Example:</b> A
sample plug-in directory structure follows. There are two plug-in directories;
some sample content is shown for the two plug-ins.<codeblock>\plugins
        \plug1.ibm.doc
                      \plugin.xml
                      \plug1toc.xml
                      \bats.html
                      \concepts
                               \batsonar.html
                      \tasks
                               \batcaring.html
        \plug2.ibm.doc
                      \tasks
                               \batcleaning.html
                               \batfeeding.html
                      \reference
                               \bathistory.html
</codeblock></p><p>The DITA source files for this plug-in structure:<codeblock>c:\eclipseplugins
        \plug1.ibm.doc
                      \batplug1.ditamap
                      \bats.dita
                      \concepts
                               \batsonar.dita
                      \tasks
                               \batcaring.dita
        \plug2.ibm.doc
                      \tasks
                               \batfeeding.dita
                               \batcleaning.dita
                      \reference
                               \bathistory.dita
</codeblock></p><p>Here is the content of batplug1.ditamap; in plug1.ibm.doc:<codeblock
expanse="page">&lt;map title="Bats">
 &lt;topicref navtitle="Bats" href="bats.dita">
 &lt;topicref navtitle="Bat sonar" href="concepts/batsonar.dita">&lt;/topicref>
 &lt;topicref navtitle="Caring for your fruit bat" href="tasks/batcaring.dita">&lt;/topicref>
 &lt;topicref navtitle="Cleaning your fruit bat" 
    href="../plug2.ibm.com/tasks/batcleaning.dita">&lt;/topicref>
 &lt;topicref navtitle="Feeding your bat" 
    href="../plug2.ibm.com/tasks/batfeeding.dita">&lt;/topicref>
 &lt;topicref navtitle="Bat history" 
    href="../plug2.ibm.com/reference/bathistory.dita">&lt;/topicref>
&lt;/topicref>
&lt;/map></codeblock></p><p>References in the map work as follows:<ul>
<li><q>Bats</q> is in the same directory as the map</li>
<li><q>Bat sonar</q> is in the concepts directory under the map</li>
<li><q>Caring for your fruit bat</q> is in the tasks directory under the map</li>
<li><q>Cleaning your fruit bat</q> is in another plug-in, <q>plug2.ibm.com</q>.
That plugin2 is in a peer directory to plugin1. The topic is in the tasks
directory in the plug2 directory.</li>
<li><q>Feeding your bat</q> is in plug2, in its tasks directory.</li>
<li><q>Bat history</q> is in plug2, in its reference directory.</li>
</ul></p><p>If, from batsonar in plugin1, you wanted to refer to batfeeding
in plugin2, you would code a link or cross-reference in DITA as this following
href. The first <q>../</q> backs you from batcaring into the <q>plug2.ibm.doc</q> directory;
the second <q>../</q> backs you into the <q>plugins</q> directory. <codeblock>href="../../plug2.ibm.doc/tasks/batfeeding.dita"</codeblock></p><p>The
DITA search (DSH) file only needs to indicate the <q>home</q> project directory;
the other plug-in directory should not be listed in the DSH file. But, the
relative directories need to match the relative locations in the source files;
that is, plug2.ibm.doc needs to be a peer of plug1.ibm.doc.<codeblock>DIR:c:\pluginsource\plug1.ibm.doc</codeblock></p><p>You
would call the map2xhtml command as follows (or use the easier to use GUI),
where <q>dita.dsh</q> contains the DIR line above:<codeblock>rexx map2xhtml batplug1.ditamap /OUTDIR:".\out" /VO /L /DSH:"dita.dsh"</codeblock></p
></section>
<section><title>In cross-references and links</title><p>Using the above directory
structure, assume you want to link from batsonar.dita to batfeeding.dita.
You can use the linking tool while editing batsonar and add a cross-reference
link to another plug-in. The result would be a XREF with a relative path.
The path needs to back into the <q>plugins</q> directory. For example:<codeblock>For fun with feeding your bat, see 
&lt;xref href="../../../plug2.ibm.doc/tasks/batfeeding.dita">&lt;/xref>.</codeblock></p></section>
</conbody>
</concept>
